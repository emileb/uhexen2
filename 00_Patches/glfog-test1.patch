Basic experimental fog code extracted from jshexen2 (activate with
"gl_fog 1", see the cvars for other options):
- underwater fogging removed
- slightly cleaned-up according to original quake code
- there is some striped view in fogged areas ;(
- seems NOT working correctly without multitexturing
- obviously still needs fixing ;)  the only reason I
  revied this crap is that the glowed missiles look
  somewhat better in fog (personal liking), sigh...

diff -urNp hexen2source-1.3.0/hexen2/gl_dl_rlight.c hexen2source-1.3.0x/hexen2/gl_dl_rlight.c
--- hexen2source-1.3.0/hexen2/gl_dl_rlight.c	2005-06-15 16:18:17.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/gl_dl_rlight.c	2005-08-29 17:14:29.000000000 +0300
@@ -115,6 +115,10 @@ void R_RenderDlights (void)
 
 	r_dlightframecount = r_framecount + 1;	// because the count hasn't
 											//  advanced yet for this frame
+
+	// disable drawing fog on lights
+	if (gl_fogenable.value)
+		glDisable_fp(GL_FOG);
 	glDepthMask_fp (0);
 	glDisable_fp (GL_TEXTURE_2D);
 	glShadeModel_fp (GL_SMOOTH);
@@ -134,6 +138,9 @@ void R_RenderDlights (void)
 	glEnable_fp (GL_TEXTURE_2D);
 	glBlendFunc_fp (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 	glDepthMask_fp (1);
+	// re-enable fog
+	if (gl_fogenable.value)
+		glEnable_fp(GL_FOG);
 }
 
 
diff -urNp hexen2source-1.3.0/hexen2/gl_dl_rmain.c hexen2source-1.3.0x/hexen2/gl_dl_rmain.c
--- hexen2source-1.3.0/hexen2/gl_dl_rmain.c	2005-08-17 03:02:57.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/gl_dl_rmain.c	2005-08-29 17:14:29.000000000 +0300
@@ -67,6 +67,7 @@ void R_MarkLeaves (void);
 
 extern	cvar_t	v_gamma;
 extern	qboolean gl_dogamma;
+GLfloat	fog_colours[4];
 
 cvar_t	r_norefresh = {"r_norefresh","0"};
 cvar_t	r_drawentities = {"r_drawentities","1"};
@@ -98,6 +99,14 @@ cvar_t	gl_waterwarp = {"gl_waterwarp", "
 cvar_t	gl_glows = {"gl_glows","1",true};
 cvar_t	gl_other_glows = {"gl_other_glows","0",true};
 cvar_t	gl_missile_glows = {"gl_missile_glows","1",true};
+cvar_t	gl_fogenable	= {"gl_fog", "0", true};
+cvar_t	gl_fogstart	= {"gl_fogstart", "400.0", true};
+cvar_t	gl_fogend	= {"gl_fogend", "2000.0", true};
+cvar_t	gl_fogdensity	= {"gl_fogdensity", "0.2", true};
+cvar_t	gl_fogred	= {"gl_fogred","0.5", true};
+cvar_t	gl_foggreen	= {"gl_foggreen","0.5", true};
+cvar_t	gl_fogblue	= {"gl_fogblue","0.5", true};
+cvar_t	gl_fogalpha	= {"gl_fogalpha", "0.5", true};
 
 extern	cvar_t	gl_ztrick;
 
@@ -1179,6 +1188,9 @@ void R_DrawAllGlows(void)
 	if (!r_drawentities.value)
 		return;
 
+	if (gl_fogenable.value)
+		glDisable_fp(GL_FOG);
+
 	glDepthMask_fp (0);
 	glDisable_fp (GL_TEXTURE_2D);
 	glShadeModel_fp (GL_SMOOTH);
@@ -1197,6 +1209,9 @@ void R_DrawAllGlows(void)
 		}		
 	}
 
+	if (gl_fogenable.value)
+		glEnable_fp(GL_FOG);
+
 	glDisable_fp (GL_BLEND);
 	glEnable_fp (GL_TEXTURE_2D);
 	glBlendFunc_fp (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
@@ -1573,6 +1588,23 @@ void R_RenderScene (void)
 
 	R_MarkLeaves ();	// done here so we know if we're in water
 
+#if 0
+// WHY DID JSHEXEN2 PUT THIS HERE ??!!
+	if (gl_fogenable.value)
+	{
+		glFogi_fp(GL_FOG_MODE, GL_LINEAR);
+
+		fog_colours[0] = gl_fogred.value;
+		fog_colours[1] = gl_foggreen.value;
+		fog_colours[2] = gl_fogblue.value;
+
+		glFogfv_fp(GL_FOG_COLOR, fog_colours);
+		glFogf_fp(GL_FOG_START, gl_fogstart.value);
+		glFogf_fp(GL_FOG_END, gl_fogend.value);
+		glEnable_fp(GL_FOG);
+	}
+#endif
+
 	R_DrawWorld ();		// adds static entities to the list
 
 	S_ExtraUpdate ();	// don't let sound get messed up if going slow
@@ -1581,6 +1613,8 @@ void R_RenderScene (void)
 
 	R_DrawAllGlows();
 
+	//glDisable_fp(GL_FOG);	// already done in R_RenderDlights()
+
 	R_RenderDlights ();
 
 #if 0
@@ -1772,6 +1806,39 @@ void R_RenderView (void)
 
 	R_Clear ();
 
+	if (gl_fogenable.value)
+	{
+		if (gl_fogstart.value < 5)
+			Cvar_SetValue ("gl_fogstart", 5);
+		if (gl_fogstart.value > 4095)
+			Cvar_SetValue ("gl_fogstart", 4095);
+		if (gl_fogend.value < 6)
+			Cvar_SetValue ("gl_fogend", 6);
+		if (gl_fogend.value > 4096)
+			Cvar_SetValue ("gl_fogend", 4096);
+		if (gl_fogstart.value >= gl_fogend.value)
+			Cvar_SetValue ("gl_fogend", gl_fogstart.value + 1);
+
+		fog_colours[0] = (GLfloat) gl_fogred.value;
+		fog_colours[1] = (GLfloat) gl_foggreen.value;
+		fog_colours[2] = (GLfloat) gl_fogblue.value;
+		fog_colours[3] = (GLfloat) 1;//gl_fogalpha.value;
+
+		glFogi_fp (GL_FOG_MODE, GL_LINEAR);
+	//	glFogi_fp (GL_FOG_MODE, GL_EXP);
+	//	glFogi_fp (GL_FOG_MODE, GL_EXP2);
+		glFogfv_fp (GL_FOG_COLOR, fog_colours);
+		glFogf_fp (GL_FOG_START, gl_fogstart.value);
+		glFogf_fp (GL_FOG_END, gl_fogend.value);
+		glFogf_fp (GL_FOG_DENSITY, gl_fogdensity.value);
+	//	glHint_fp (GL_FOG_HINT, GL_NICEST);
+		glEnable_fp (GL_FOG);
+	}
+	else
+	{
+		glDisable_fp (GL_FOG);
+	}
+
 	// render normal view
 	R_RenderScene ();
 
@@ -1787,6 +1854,9 @@ void R_RenderView (void)
 
 	R_DrawViewModel();
 
+	if (gl_fogenable.value)
+		glDisable_fp(GL_FOG);
+
 	// render mirror view
 	R_Mirror ();
 
@@ -1796,6 +1866,8 @@ void R_RenderView (void)
 	{
 		R_PrintTimes ();
 	}
+
+	glDepthMask_fp(1);
 }
 
 
diff -urNp hexen2source-1.3.0/hexen2/gl_dl_rmisc.c hexen2source-1.3.0x/hexen2/gl_dl_rmisc.c
--- hexen2source-1.3.0/hexen2/gl_dl_rmisc.c	2005-06-15 16:18:17.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/gl_dl_rmisc.c	2005-08-29 17:14:29.000000000 +0300
@@ -216,6 +216,15 @@ void R_Init (void)
 	Cvar_RegisterVariable (&gl_reporttjunctions);
 	Cvar_RegisterVariable (&gl_multitexture);
 
+	Cvar_RegisterVariable (&gl_fogenable);
+	Cvar_RegisterVariable (&gl_fogstart);
+	Cvar_RegisterVariable (&gl_fogend);
+	Cvar_RegisterVariable (&gl_fogdensity);
+	Cvar_RegisterVariable (&gl_fogalpha);
+	Cvar_RegisterVariable (&gl_fogred);
+	Cvar_RegisterVariable (&gl_fogblue);
+	Cvar_RegisterVariable (&gl_foggreen);
+
 	Cvar_RegisterVariable (&gl_glows);
 	Cvar_RegisterVariable (&gl_missile_glows);
 	Cvar_RegisterVariable (&gl_other_glows);
diff -urNp hexen2source-1.3.0/hexen2/gl_dl_vidsdl.c hexen2source-1.3.0x/hexen2/gl_dl_vidsdl.c
--- hexen2source-1.3.0/hexen2/gl_dl_vidsdl.c	2005-08-12 12:21:08.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/gl_dl_vidsdl.c	2005-08-29 17:14:29.000000000 +0300
@@ -556,6 +556,15 @@ void GL_Init_Functions(void)
   if (glTexSubImage2D_fp == 0) {Sys_Error("glTexSubImage2D not found in GL library");}
 #endif
 
+  glFogf_fp = (glFogf_f) SDL_GL_GetProcAddress("glFogf");
+  if (glFogf_fp == 0) {Sys_Error("glFogf not found in GL library");}
+  glFogfv_fp = (glFogfv_f) SDL_GL_GetProcAddress("glFogfv");
+  if (glFogfv_fp == 0) {Sys_Error("glFogfv not found in GL library");}
+  glFogi_fp = (glFogi_f) SDL_GL_GetProcAddress("glFogi");
+  if (glFogi_fp == 0) {Sys_Error("glFogi not found in GL library");}
+  glFogiv_fp = (glFogiv_f) SDL_GL_GetProcAddress("glFogiv");
+  if (glFogiv_fp == 0) {Sys_Error("glFogiv not found in GL library");}
+
   glAlphaFunc_fp = (glAlphaFunc_f) SDL_GL_GetProcAddress("glAlphaFunc");
   if (glAlphaFunc_fp == 0) {Sys_Error("glAlphaFunc not found in GL library");}
   glBlendFunc_fp = (glBlendFunc_f) SDL_GL_GetProcAddress("glBlendFunc");
diff -urNp hexen2source-1.3.0/hexen2/gl_func.h hexen2source-1.3.0x/hexen2/gl_func.h
--- hexen2source-1.3.0/hexen2/gl_func.h	2005-06-15 16:18:17.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/gl_func.h	2005-08-29 17:14:29.000000000 +0300
@@ -27,6 +27,11 @@ typedef void (*glColor3ubv_f)(const GLub
 typedef void (*glColor3f_f)(GLfloat,GLfloat,GLfloat);
 typedef void (*glClearColor_f)(GLclampf,GLclampf,GLclampf,GLclampf);
 
+typedef void (*glFogf_f)(GLenum,GLfloat);
+typedef void (*glFogfv_f)(GLenum, const GLfloat *);
+typedef void (*glFogi_f)(GLenum,GLint);
+typedef void (*glFogiv_f)(GLenum, const GLint *);
+
 typedef void (*glAlphaFunc_f)(GLenum,GLclampf);
 typedef void (*glBlendFunc_f)(GLenum,GLenum);
 typedef void (*glShadeModel_f)(GLenum);
@@ -102,6 +107,11 @@ glScalef_f glScalef_fp;
 glTexImage2D_f glTexImage2D_fp;
 glTexSubImage2D_f glTexSubImage2D_fp;
 
+glFogf_f glFogf_fp;
+glFogfv_f glFogfv_fp;
+glFogi_f glFogi_fp;
+glFogiv_f glFogiv_fp;
+
 glAlphaFunc_f glAlphaFunc_fp;
 glBlendFunc_f glBlendFunc_fp;
 glShadeModel_f glShadeModel_fp;
diff -urNp hexen2source-1.3.0/hexen2/gl_func_nondl.h hexen2source-1.3.0x/hexen2/gl_func_nondl.h
--- hexen2source-1.3.0/hexen2/gl_func_nondl.h	2005-06-16 00:32:41.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/gl_func_nondl.h	2005-08-29 17:14:29.000000000 +0300
@@ -27,6 +27,11 @@
 #define glColor3f_fp(a,b,c)		glColor3f((a),(b),(c))
 #define glClearColor_fp(a,b,c,d)	glClearColor((a),(b),(c),(d))
 
+#define glFogf_fp(a,b)			glFogf((a),(b))
+#define glFogfv_fp(a,b)			glFogfv((a),(b))
+#define glFogi_fp(a,b)			glFogi((a),(b))
+#define glFogiv_fp(a,b)			glFogiv((a),(b))
+
 #define glAlphaFunc_fp(a,b)		glAlphaFunc((a),(b))
 #define glBlendFunc_fp(a,b)		glBlendFunc((a),(b))
 #define glShadeModel_fp(a)		glShadeModel((a))
diff -urNp hexen2source-1.3.0/hexen2/glquake.h hexen2source-1.3.0x/hexen2/glquake.h
--- hexen2source-1.3.0/hexen2/glquake.h	2005-06-15 16:18:17.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/glquake.h	2005-08-29 17:14:29.000000000 +0300
@@ -300,6 +300,16 @@ extern	cvar_t	gl_glows;
 extern	cvar_t	gl_other_glows;
 extern	cvar_t	gl_missile_glows;
 
+extern	cvar_t	gl_fogenable;
+extern	cvar_t	gl_fogstart;
+extern	cvar_t	gl_fogend;
+extern	cvar_t	gl_fogdensity;
+extern	cvar_t	gl_fogalpha;
+extern	cvar_t	gl_fogred;
+extern	cvar_t	gl_fogblue;
+extern	cvar_t	gl_foggreen;
+extern	cvar_t	gl_underwaterfog;
+
 extern	int	gl_lightmap_format;
 extern	int	gl_solid_format;
 extern	int	gl_alpha_format;
diff -urNp hexen2source-1.3.0/hexen2/win_stuff/gl_vidnt.c hexen2source-1.3.0x/hexen2/win_stuff/gl_vidnt.c
--- hexen2source-1.3.0/hexen2/win_stuff/gl_vidnt.c	2005-08-11 02:19:26.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/win_stuff/gl_vidnt.c	2005-08-29 17:14:29.000000000 +0300
@@ -739,6 +739,15 @@ void GL_Init_Functions(void)
   glDepthFunc_fp = (glDepthFunc_f) wglGetProcAddress_fp("glDepthFunc");
   if (glDepthFunc_fp == 0) {Sys_Error("glDepthFunc not found in GL library");}
 
+  glFogf_fp = (glFogf_f) wglGetProcAddress("glFogf");
+  if (glFogf_fp == 0) {Sys_Error("glFogf not found in GL library");}
+  glFogfv_fp = (glFogfv_f) wglGetProcAddress("glFogfv");
+  if (glFogfv_fp == 0) {Sys_Error("glFogfv not found in GL library");}
+  glFogi_fp = (glFogi_f) wglGetProcAddress("glFogi");
+  if (glFogi_fp == 0) {Sys_Error("glFogi not found in GL library");}
+  glFogiv_fp = (glFogiv_f) wglGetProcAddress("glFogiv");
+  if (glFogiv_fp == 0) {Sys_Error("glFogiv not found in GL library");}
+
   glDrawBuffer_fp = (glDrawBuffer_f) wglGetProcAddress_fp("glDrawBuffer");
   if (glDrawBuffer_fp == 0) {Sys_Error("glDrawBuffer not found in GL library");}
   glReadBuffer_fp = (glDrawBuffer_f) wglGetProcAddress_fp("glReadBuffer");
diff -urNp hexen2source-1.3.0/hexenworld/Client/gl_func.h hexen2source-1.3.0x/hexenworld/Client/gl_func.h
--- hexen2source-1.3.0/hexenworld/Client/gl_func.h	2005-06-15 16:18:19.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/gl_func.h	2005-08-29 17:14:29.000000000 +0300
@@ -27,6 +27,11 @@ typedef void (*glColor3ubv_f)(const GLub
 typedef void (*glColor3f_f)(GLfloat,GLfloat,GLfloat);
 typedef void (*glClearColor_f)(GLclampf,GLclampf,GLclampf,GLclampf);
 
+typedef void (*glFogf_f)(GLenum,GLfloat);
+typedef void (*glFogfv_f)(GLenum, const GLfloat *);
+typedef void (*glFogi_f)(GLenum,GLint);
+typedef void (*glFogiv_f)(GLenum, const GLint *);
+
 typedef void (*glAlphaFunc_f)(GLenum,GLclampf);
 typedef void (*glBlendFunc_f)(GLenum,GLenum);
 typedef void (*glShadeModel_f)(GLenum);
@@ -102,6 +107,11 @@ glScalef_f glScalef_fp;
 glTexImage2D_f glTexImage2D_fp;
 glTexSubImage2D_f glTexSubImage2D_fp;
 
+glFogf_f glFogf_fp;
+glFogfv_f glFogfv_fp;
+glFogi_f glFogi_fp;
+glFogiv_f glFogiv_fp;
+
 glAlphaFunc_f glAlphaFunc_fp;
 glBlendFunc_f glBlendFunc_fp;
 glShadeModel_f glShadeModel_fp;
diff -urNp hexen2source-1.3.0/hexenworld/Client/gl_func_nondl.h hexen2source-1.3.0x/hexenworld/Client/gl_func_nondl.h
--- hexen2source-1.3.0/hexenworld/Client/gl_func_nondl.h	2005-06-16 00:33:00.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/gl_func_nondl.h	2005-08-29 17:14:29.000000000 +0300
@@ -27,6 +27,11 @@
 #define glColor3f_fp(a,b,c)		glColor3f((a),(b),(c))
 #define glClearColor_fp(a,b,c,d)	glClearColor((a),(b),(c),(d))
 
+#define glFogf_fp(a,b)			glFogf((a),(b))
+#define glFogfv_fp(a,b)			glFogfv((a),(b))
+#define glFogi_fp(a,b)			glFogi((a),(b))
+#define glFogiv_fp(a,b)			glFogiv((a),(b))
+
 #define glAlphaFunc_fp(a,b)		glAlphaFunc((a),(b))
 #define glBlendFunc_fp(a,b)		glBlendFunc((a),(b))
 #define glShadeModel_fp(a)		glShadeModel((a))
diff -urNp hexen2source-1.3.0/hexenworld/Client/glquake.h hexen2source-1.3.0x/hexenworld/Client/glquake.h
--- hexen2source-1.3.0/hexenworld/Client/glquake.h	2005-06-26 13:13:53.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/glquake.h	2005-08-29 17:14:29.000000000 +0300
@@ -303,6 +303,16 @@ extern	cvar_t	gl_glows;
 extern	cvar_t	gl_other_glows;
 extern	cvar_t	gl_missile_glows;
 
+extern	cvar_t	gl_fogenable;
+extern	cvar_t	gl_fogstart;
+extern	cvar_t	gl_fogend;
+extern	cvar_t	gl_fogdensity;
+extern	cvar_t	gl_fogalpha;
+extern	cvar_t	gl_fogred;
+extern	cvar_t	gl_fogblue;
+extern	cvar_t	gl_foggreen;
+extern	cvar_t	gl_underwaterfog;
+
 extern	int	gl_lightmap_format;
 extern	int	gl_solid_format;
 extern	int	gl_alpha_format;
diff -urNp hexen2source-1.3.0/hexenworld/Client/gl_rlight.c hexen2source-1.3.0x/hexenworld/Client/gl_rlight.c
--- hexen2source-1.3.0/hexenworld/Client/gl_rlight.c	2005-06-15 16:18:19.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/gl_rlight.c	2005-08-29 17:14:29.000000000 +0300
@@ -141,6 +141,10 @@ void R_RenderDlights (void)
 
 	r_dlightframecount = r_framecount + 1;	// because the count hasn't
 											//  advanced yet for this frame
+
+	// disable drawing fog on lights
+	if (gl_fogenable.value)
+		glDisable_fp(GL_FOG);
 	glDepthMask_fp (0);
 	glDisable_fp (GL_TEXTURE_2D);
 	glShadeModel_fp (GL_SMOOTH);
@@ -160,6 +164,9 @@ void R_RenderDlights (void)
 	glEnable_fp (GL_TEXTURE_2D);
 	glBlendFunc_fp (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 	glDepthMask_fp (1);
+	// re-enable fog
+	if (gl_fogenable.value)
+		glEnable_fp(GL_FOG);
 }
 
 
diff -urNp hexen2source-1.3.0/hexenworld/Client/gl_rmain.c hexen2source-1.3.0x/hexenworld/Client/gl_rmain.c
--- hexen2source-1.3.0/hexenworld/Client/gl_rmain.c	2005-08-17 03:02:57.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/gl_rmain.c	2005-08-29 17:14:29.000000000 +0300
@@ -67,6 +67,7 @@ void R_MarkLeaves (void);
 
 extern	cvar_t	v_gamma;
 extern	qboolean gl_dogamma;
+GLfloat	fog_colours[4];
 
 cvar_t	r_norefresh = {"r_norefresh","0"};
 cvar_t	r_drawentities = {"r_drawentities","1"};
@@ -99,6 +100,14 @@ cvar_t	r_teamcolor = {"r_teamcolor", "18
 cvar_t	gl_glows = {"gl_glows","1",true};
 cvar_t	gl_other_glows = {"gl_other_glows","0",true};
 cvar_t	gl_missile_glows = {"gl_missile_glows","1",true};
+cvar_t	gl_fogenable	= {"gl_fog", "0", true};
+cvar_t	gl_fogstart	= {"gl_fogstart", "400.0", true};
+cvar_t	gl_fogend	= {"gl_fogend", "2000.0", true};
+cvar_t	gl_fogdensity	= {"gl_fogdensity", "0.2", true};
+cvar_t	gl_fogred	= {"gl_fogred","0.5", true};
+cvar_t	gl_foggreen	= {"gl_foggreen","0.5", true};
+cvar_t	gl_fogblue	= {"gl_fogblue","0.5", true};
+cvar_t	gl_fogalpha	= {"gl_fogalpha", "0.5", true};
 
 extern	cvar_t	gl_ztrick;
 extern	cvar_t	scr_fov;
@@ -1192,6 +1201,9 @@ void R_DrawAllGlows(void)
 	if (!r_drawentities.value)
 		return;
 
+	if (gl_fogenable.value)
+		glDisable_fp(GL_FOG);
+
 	glDepthMask_fp (0);
 	glDisable_fp (GL_TEXTURE_2D);
 	glShadeModel_fp (GL_SMOOTH);
@@ -1210,6 +1222,9 @@ void R_DrawAllGlows(void)
 		}		
 	}
 
+	if (gl_fogenable.value)
+		glEnable_fp(GL_FOG);
+
 	glDisable_fp (GL_BLEND);
 	glEnable_fp (GL_TEXTURE_2D);
 	glBlendFunc_fp (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
@@ -1647,6 +1662,23 @@ void R_RenderScene (void)
 
 	R_MarkLeaves ();	// done here so we know if we're in water
 
+#if 0
+// WHY DID JSHEXEN2 PUT THIS HERE ??!!
+	if (gl_fogenable.value)
+	{
+		glFogi_fp(GL_FOG_MODE, GL_LINEAR);
+
+		fog_colours[0] = gl_fogred.value;
+		fog_colours[1] = gl_foggreen.value;
+		fog_colours[2] = gl_fogblue.value;
+
+		glFogfv_fp(GL_FOG_COLOR, fog_colours);
+		glFogf_fp(GL_FOG_START, gl_fogstart.value);
+		glFogf_fp(GL_FOG_END, gl_fogend.value);
+		glEnable_fp(GL_FOG);
+	}
+#endif
+
 	R_DrawWorld ();		// adds static entities to the list
 
 	S_ExtraUpdate ();	// don't let sound get messed up if going slow
@@ -1655,6 +1687,8 @@ void R_RenderScene (void)
 
 	R_DrawAllGlows();
 
+	//glDisable_fp(GL_FOG);	// already done in R_RenderDlights()
+
 	R_RenderDlights ();
 
 #ifdef GLTEST
@@ -1844,6 +1878,39 @@ void R_RenderView (void)
 
 	R_Clear ();
 
+	if (gl_fogenable.value)
+	{
+		if (gl_fogstart.value < 5)
+			Cvar_SetValue ("gl_fogstart", 5);
+		if (gl_fogstart.value > 4095)
+			Cvar_SetValue ("gl_fogstart", 4095);
+		if (gl_fogend.value < 6)
+			Cvar_SetValue ("gl_fogend", 6);
+		if (gl_fogend.value > 4096)
+			Cvar_SetValue ("gl_fogend", 4096);
+		if (gl_fogstart.value >= gl_fogend.value)
+			Cvar_SetValue ("gl_fogend", gl_fogstart.value + 1);
+
+		fog_colours[0] = (GLfloat) gl_fogred.value;
+		fog_colours[1] = (GLfloat) gl_foggreen.value;
+		fog_colours[2] = (GLfloat) gl_fogblue.value;
+		fog_colours[3] = (GLfloat) 1;//gl_fogalpha.value;
+
+		glFogi_fp (GL_FOG_MODE, GL_LINEAR);
+	//	glFogi_fp (GL_FOG_MODE, GL_EXP);
+	//	glFogi_fp (GL_FOG_MODE, GL_EXP2);
+		glFogfv_fp (GL_FOG_COLOR, fog_colours);
+		glFogf_fp (GL_FOG_START, gl_fogstart.value);
+		glFogf_fp (GL_FOG_END, gl_fogend.value);
+		glFogf_fp (GL_FOG_DENSITY, gl_fogdensity.value);
+	//	glHint_fp (GL_FOG_HINT, GL_NICEST);
+		glEnable_fp (GL_FOG);
+	}
+	else
+	{
+		glDisable_fp (GL_FOG);
+	}
+
 	// render normal view
 	R_RenderScene ();
 
@@ -1859,6 +1926,9 @@ void R_RenderView (void)
 
 	R_DrawViewModel();
 
+	if (gl_fogenable.value)
+		glDisable_fp(GL_FOG);
+
 	// render mirror view
 //	R_Mirror ();
 
@@ -1868,6 +1938,8 @@ void R_RenderView (void)
 	{
 		R_PrintTimes ();
 	}
+
+	glDepthMask_fp(1);
 }
 
 void R_DrawName(vec3_t origin, char *Name, int Red)
diff -urNp hexen2source-1.3.0/hexenworld/Client/gl_rmisc.c hexen2source-1.3.0x/hexenworld/Client/gl_rmisc.c
--- hexen2source-1.3.0/hexenworld/Client/gl_rmisc.c	2005-06-26 13:13:53.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/gl_rmisc.c	2005-08-29 17:14:29.000000000 +0300
@@ -196,6 +196,15 @@ void R_Init (void)
 	Cvar_RegisterVariable (&gl_multitexture);
 	Cvar_RegisterVariable (&r_teamcolor);
 
+	Cvar_RegisterVariable (&gl_fogenable);
+	Cvar_RegisterVariable (&gl_fogstart);
+	Cvar_RegisterVariable (&gl_fogend);
+	Cvar_RegisterVariable (&gl_fogdensity);
+	Cvar_RegisterVariable (&gl_fogalpha);
+	Cvar_RegisterVariable (&gl_fogred);
+	Cvar_RegisterVariable (&gl_fogblue);
+	Cvar_RegisterVariable (&gl_foggreen);
+
 	Cvar_RegisterVariable (&gl_glows);
 	Cvar_RegisterVariable (&gl_missile_glows);
 	Cvar_RegisterVariable (&gl_other_glows);
diff -urNp hexen2source-1.3.0/hexenworld/Client/gl_vidsdl.c hexen2source-1.3.0x/hexenworld/Client/gl_vidsdl.c
--- hexen2source-1.3.0/hexenworld/Client/gl_vidsdl.c	2005-08-12 12:21:09.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/gl_vidsdl.c	2005-08-29 17:14:29.000000000 +0300
@@ -560,6 +560,15 @@ void GL_Init_Functions(void)
   if (glTexSubImage2D_fp == 0) {Sys_Error("glTexSubImage2D not found in GL library");}
 #endif
 
+  glFogf_fp = (glFogf_f) SDL_GL_GetProcAddress("glFogf");
+  if (glFogf_fp == 0) {Sys_Error("glFogf not found in GL library");}
+  glFogfv_fp = (glFogfv_f) SDL_GL_GetProcAddress("glFogfv");
+  if (glFogfv_fp == 0) {Sys_Error("glFogfv not found in GL library");}
+  glFogi_fp = (glFogi_f) SDL_GL_GetProcAddress("glFogi");
+  if (glFogi_fp == 0) {Sys_Error("glFogi not found in GL library");}
+  glFogiv_fp = (glFogiv_f) SDL_GL_GetProcAddress("glFogiv");
+  if (glFogiv_fp == 0) {Sys_Error("glFogiv not found in GL library");}
+
   glAlphaFunc_fp = (glAlphaFunc_f) SDL_GL_GetProcAddress("glAlphaFunc");
   if (glAlphaFunc_fp == 0) {Sys_Error("glAlphaFunc not found in GL library");}
   glBlendFunc_fp = (glBlendFunc_f) SDL_GL_GetProcAddress("glBlendFunc");
diff -urNp hexen2source-1.3.0/hexenworld/Client/win_stuff/gl_vidnt.c hexen2source-1.3.0x/hexenworld/Client/win_stuff/gl_vidnt.c
--- hexen2source-1.3.0/hexenworld/Client/win_stuff/gl_vidnt.c	2005-08-11 02:19:27.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/win_stuff/gl_vidnt.c	2005-08-29 17:14:29.000000000 +0300
@@ -738,6 +738,15 @@ void GL_Init_Functions(void)
   glDepthFunc_fp = (glDepthFunc_f) wglGetProcAddress_fp("glDepthFunc");
   if (glDepthFunc_fp == 0) {Sys_Error("glDepthFunc not found in GL library");}
 
+  glFogf_fp = (glFogf_f) wglGetProcAddress("glFogf");
+  if (glFogf_fp == 0) {Sys_Error("glFogf not found in GL library");}
+  glFogfv_fp = (glFogfv_f) wglGetProcAddress("glFogfv");
+  if (glFogfv_fp == 0) {Sys_Error("glFogfv not found in GL library");}
+  glFogi_fp = (glFogi_f) wglGetProcAddress("glFogi");
+  if (glFogi_fp == 0) {Sys_Error("glFogi not found in GL library");}
+  glFogiv_fp = (glFogiv_f) wglGetProcAddress("glFogiv");
+  if (glFogiv_fp == 0) {Sys_Error("glFogiv not found in GL library");}
+
   glDrawBuffer_fp = (glDrawBuffer_f) wglGetProcAddress_fp("glDrawBuffer");
   if (glDrawBuffer_fp == 0) {Sys_Error("glDrawBuffer not found in GL library");}
   glReadBuffer_fp = (glDrawBuffer_f) wglGetProcAddress_fp("glReadBuffer");
