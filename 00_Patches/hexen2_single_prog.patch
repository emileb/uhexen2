Allows running the original Hexen2 game with a single
progs.dat file instead of progs.dat + progs2.dat files.
Not tested much.

If you use this patch, you need to use hcc from h2mp_utils
in order to compile the gamecode, because hcc from h2_utils
will segfault.

diff -urN uhexen2-20050829/hexen2/pr_edict.c uhexen2-20050830/hexen2/pr_edict.c
--- uhexen2-20050829/hexen2/pr_edict.c	2005-07-09 12:07:58.000000000 +0300
+++ uhexen2-20050830/hexen2/pr_edict.c	2005-08-31 01:30:34.000000000 +0300
@@ -1153,7 +1153,7 @@
 void PR_LoadProgs (void)
 {
 	int	i;
-#ifndef H2MP
+#if 0	//#ifndef H2MP
 	int	j;
 	FILE	*f;
 	char	mapname[MAX_QPATH], progname[MAX_OSPATH];
@@ -1176,7 +1176,7 @@
 	*** BUT *** :  If you wish to compile progs.dat and progs2.dat together
 	into a single progs.dat for Hexen2 (don't ask ;), then you MUST replace
 	the " #ifndef H2MP " with an " #if 0 " below.			O.S. */
-#ifndef H2MP
+#if 0	//#ifndef H2MP
 	COM_FOpenFile ("maplist.txt", &f, true);
 	if (f)
 	{
diff -urN uhexen2-20050829/gamecode/hc/h2/ai.hc uhexen2-20050830/gamecode/hc/h2/ai.hc
--- uhexen2-20050829/gamecode/hc/h2/ai.hc	2005-01-05 01:48:12.000000000 +0200
+++ uhexen2-20050830/gamecode/hc/h2/ai.hc	2005-08-31 01:28:10.000000000 +0300
@@ -35,7 +35,13 @@
 void()spider_onwall_wait;
 float(entity targ , entity from)infront_of_ent;
 void(entity proj)mezzo_choose_roll;
+void()multiplayer_health;
+void()riderpath_init;
+void(float move_speed)riderpath_move;
+float(float move_speed)eidolon_riderpath_move;
+void() eidolon_guarding;
 void()hive_die;
+float()eidolon_check_attack;
 
 //void()check_climb;
 
@@ -382,7 +388,18 @@
 			if (!infront (client))
 				return FALSE;
 		}
-	
+
+	if (r == RANGE_NEAR)
+	{
+		if (client.show_hostile < time && !infront (client))
+			return FALSE;
+	}
+	else if (r == RANGE_MID)
+	{
+		if (!infront (client))
+			return FALSE;
+ 	}
+
 	if (!visible (client))
 		return FALSE;
 
@@ -488,7 +505,20 @@
 	if (FindTarget (FALSE))
 		return;
 
-	movetogoal (dist);
+	if(self.classname=="monster_eidolon")
+	{
+		if (!self.path_current)
+			riderpath_init();
+		if(!eidolon_riderpath_move(dist))
+		{
+			if(self.think==self.th_walk)
+				self.think=eidolon_guarding;
+		}
+		else if(self.think==eidolon_guarding)
+			self.think=self.th_walk;
+	}
+	else
+		movetogoal (dist);
 };
 
 
@@ -598,6 +628,11 @@
 
 	if(self.goalentity==self.controller)
 		return FALSE;
+	if(self.classname=="monster_eidolon")
+		if(self.goalentity==self.controller)
+			return FALSE;
+		else
+			return eidolon_check_attack();
 
 	return CheckAttack ();
 };
@@ -744,11 +779,13 @@
 
 	enemy_infront = infront(self.enemy);
 	enemy_range = range(self.enemy);
-	enemy_yaw = vectoyaw(self.goalentity.origin - self.origin);
+	if(self.classname!="monster_eidolon")
+		enemy_yaw = vectoyaw(self.goalentity.origin - self.origin);
 	
 	if ((self.attack_state == AS_MISSILE) || (self.attack_state == AS_MELEE))  // turning to attack
 	{
-		ai_attack_face ();
+		if(self.classname!="monster_eidolon")
+			ai_attack_face ();
 		return;
 	}
 
@@ -764,7 +801,20 @@
 // head straight in
 //	if(self.netname=="spider")
 //		check_climb();
-	movetogoal (dist);		// done in C code...
+	if(self.classname=="monster_eidolon")
+	{
+		if(!self.path_current)
+			riderpath_init();
+		if(!eidolon_riderpath_move(dist))
+		{
+			if(self.think==self.th_run)
+				eidolon_guarding();
+		}
+		else if(self.think==eidolon_guarding)
+			self.th_run();
+	}
+	else
+		movetogoal (dist);		// done in C code...
 };
 
 
@@ -1129,8 +1179,8 @@
 		self.use=spawnspot_activate;
 }
 
-void hive_die(){}
-void spawn_ghost (entity attacker){}
+//void hive_die(){}
+//void spawn_ghost (entity attacker){}
 
 
 /*
diff -urN uhexen2-20050829/gamecode/hc/h2/progs.src uhexen2-20050830/gamecode/hc/h2/progs.src
--- uhexen2-20050829/gamecode/hc/h2/progs.src	2004-11-29 13:39:59.000000000 +0200
+++ uhexen2-20050830/gamecode/hc/h2/progs.src	2005-08-31 01:28:10.000000000 +0300
@@ -125,11 +125,11 @@
 
 eric.hc
 
-//rider.hc
-//pstboar.hc
-//famhorse.hc
-//warhorse.hc
-//dthhorse.hc
-//eidolon.hc
+rider.hc
+pstboar.hc
+famhorse.hc
+warhorse.hc
+dthhorse.hc
+eidolon.hc
 
 stats.hc
