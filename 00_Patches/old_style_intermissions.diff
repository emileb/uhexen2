reverts fullscreen intermission code usage. intermissions and help
screens will be drawn with their original size (320x160) no matter
what the resolution is.
If you really want this, that is...

diff -urNp hexen2source-1.3.0/hexen2/gl_dl_screen.c hexen2source-1.3.0x/hexen2/gl_dl_screen.c
--- hexen2source-1.3.0/hexen2/gl_dl_screen.c	2005-08-23 15:24:11.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/gl_dl_screen.c	2005-08-29 17:34:54.000000000 +0300
@@ -997,40 +997,40 @@ void SB_IntermissionOverlay(void)
 	switch(cl.intermission)
 	{
 		case 1:
-			pic = Draw_CachePicNoTrans ("gfx/meso.lmp");
+			pic = Draw_CachePic ("gfx/meso.lmp");
 			break;
 		case 2:
-			pic = Draw_CachePicNoTrans ("gfx/egypt.lmp");
+			pic = Draw_CachePic ("gfx/egypt.lmp");
 			break;
 		case 3:
-			pic = Draw_CachePicNoTrans ("gfx/roman.lmp");
+			pic = Draw_CachePic ("gfx/roman.lmp");
 			break;
 		case 4:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 5:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 6:
-			pic = Draw_CachePicNoTrans ("gfx/end-1.lmp");
+			pic = Draw_CachePic ("gfx/end-1.lmp");
 			break;
 		case 7:
-			pic = Draw_CachePicNoTrans ("gfx/end-2.lmp");
+			pic = Draw_CachePic ("gfx/end-2.lmp");
 			break;
 		case 8:
-			pic = Draw_CachePicNoTrans ("gfx/end-3.lmp");
+			pic = Draw_CachePic ("gfx/end-3.lmp");
 			break;
 		case 9:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 10:
-			pic = Draw_CachePicNoTrans ("gfx/mpend.lmp");
+			pic = Draw_CachePic ("gfx/mpend.lmp");
 			break;
 		case 11:
-			pic = Draw_CachePicNoTrans ("gfx/mpmid.lmp");
+			pic = Draw_CachePic ("gfx/mpmid.lmp");
 			break;
 		case 12:
-			pic = Draw_CachePicNoTrans ("gfx/end-3.lmp");
+			pic = Draw_CachePic ("gfx/end-3.lmp");
 			break;
 		default:
 			pic = NULL;
@@ -1039,8 +1039,7 @@ void SB_IntermissionOverlay(void)
 	if (pic == NULL)
 		Sys_Error ("SB_IntermissionOverlay: Bad episode");
 
-	//Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
-	Draw_IntermissionPic(pic);
+	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
 
 	if (cl.intermission >= 6 && cl.intermission <= 8)
 	{
@@ -1187,9 +1186,7 @@ void SCR_UpdateScreen (void)
 //
 	SCR_SetUpToDrawConsole ();
 	
-	// no need to draw view in fullscreen intermission screens
-	//if (cl.intermission > 1 || cl.intermission <= 12) {
-	if (cl.intermission < 1 || cl.intermission > 12)
+	if (cl.intermission > 1 || cl.intermission <= 12)
 	{
 		V_RenderView ();
 	}
diff -urNp hexen2source-1.3.0/hexen2/menu.c hexen2source-1.3.0x/hexen2/menu.c
--- hexen2source-1.3.0/hexen2/menu.c	2005-08-18 17:20:28.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/menu.c	2005-08-29 17:38:20.000000000 +0300
@@ -2421,11 +2421,7 @@ void M_Menu_Help_f (void)
 
 void M_Help_Draw (void)
 {
-#ifdef GLQUAKE
-	Draw_IntermissionPic(Draw_CachePicNoTrans(va("gfx/menu/help%02i.lmp", help_page+1)));
-#else
-	Draw_Pic (0, 0, Draw_CachePicResize(va("gfx/menu/help%02i.lmp", help_page+1), vid.width, vid.height));
-#endif
+	M_DrawPic (0, 0, Draw_CachePic ( va("gfx/menu/help%02i.lmp", help_page+1)) );
 }
 
 
diff -urNp hexen2source-1.3.0/hexen2/screen.c hexen2source-1.3.0x/hexen2/screen.c
--- hexen2source-1.3.0/hexen2/screen.c	2005-08-23 15:38:54.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/screen.c	2005-08-29 17:57:35.000000000 +0300
@@ -1353,42 +1353,41 @@ void SB_IntermissionOverlay(void)
 	
 	switch(cl.intermission)
 	{
-		// Pa3PyX: pics are now resized to screen size upon load
 		case 1:
-			pic = Draw_CachePicResize("gfx/meso.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/meso.lmp");
 			break;
 		case 2:
-			pic = Draw_CachePicResize("gfx/egypt.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/egypt.lmp");
 			break;
 		case 3:
-			pic = Draw_CachePicResize("gfx/roman.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/roman.lmp");
 			break;
 		case 4:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 5:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 6:
-			pic = Draw_CachePicResize("gfx/end-1.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-1.lmp");
 			break;
 		case 7:
-			pic = Draw_CachePicResize("gfx/end-2.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-2.lmp");
 			break;
 		case 8:
-			pic = Draw_CachePicResize("gfx/end-3.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-3.lmp");
 			break;
 		case 9:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 10:
-			pic = Draw_CachePicResize("gfx/mpend.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/mpend.lmp");
 			break;
 		case 11:
-			pic = Draw_CachePicResize("gfx/mpmid.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/mpmid.lmp");
 			break;
 		case 12:
-			pic = Draw_CachePicResize("gfx/end-3.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-3.lmp");
 			break;
 		default:
 			pic = NULL;
@@ -1397,9 +1396,7 @@ void SB_IntermissionOverlay(void)
 	if (pic == NULL)
 		Sys_Error ("SB_IntermissionOverlay: Bad episode");
 
-	// Pa3PyX: intermissions will now be always drawn full screen size
-//	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
-	Draw_Pic(0, 0, pic);
+	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
 
 	if (cl.intermission >= 6 && cl.intermission <= 8)
 	{
diff -urNp hexen2source-1.3.0/hexen2/vid_sdl.c hexen2source-1.3.0x/hexen2/vid_sdl.c
--- hexen2source-1.3.0/hexen2/vid_sdl.c	2005-08-11 02:19:26.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/vid_sdl.c	2005-08-29 17:50:12.000000000 +0300
@@ -43,7 +43,7 @@ byte globalcolormap[VID_GRADES*256], las
 byte *lastsourcecolormap = NULL;
 
 //intermission screen cache reference (to flush on video mode switch)
-extern cache_user_t	*intermissionScreen;
+//extern cache_user_t	*intermissionScreen;
 
 static qboolean	vid_initialized = false, vid_palettized = true;
 static int	lockcount;
@@ -377,8 +377,8 @@ int VID_SetMode (int modenum, unsigned c
 	in_mode_set = true;
 
 	//flush the intermission screen if it's cached (Pa3PyX)
-	if (intermissionScreen && intermissionScreen->data)
-		Cache_Free(intermissionScreen);
+//	if (intermissionScreen && intermissionScreen->data)
+//		Cache_Free(intermissionScreen);
 
 	if (vid_modenum == NO_MODE)
 		original_mode = windowed_default;
diff -urNp hexen2source-1.3.0/hexen2/win_stuff/vid_win.c hexen2source-1.3.0x/hexen2/win_stuff/vid_win.c
--- hexen2source-1.3.0/hexen2/win_stuff/vid_win.c	2005-08-11 23:45:01.000000000 +0300
+++ hexen2source-1.3.0x/hexen2/win_stuff/vid_win.c	2005-08-29 17:50:39.000000000 +0300
@@ -25,7 +25,7 @@ HWND		mainwindow, dibwindow;
 HWND WINAPI InitializeWindow (HINSTANCE hInstance, int nCmdShow);
 
 //intermission screen cache reference (to flush on video mode switch)
-extern	cache_user_t	*intermissionScreen;
+//extern	cache_user_t	*intermissionScreen;
 
 int			DIBWidth, DIBHeight;
 qboolean	DDActive;
@@ -1617,8 +1617,8 @@ int VID_SetMode (int modenum, unsigned c
 	CDAudio_Pause ();
 
 	//flush the intermission screen if it's cached (Pa3PyX)
-	if (intermissionScreen && intermissionScreen->data)
-		Cache_Free(intermissionScreen);
+//	if (intermissionScreen && intermissionScreen->data)
+//		Cache_Free(intermissionScreen);
 
 	if (vid_modenum == NO_MODE)
 		original_mode = windowed_default;
diff -urNp hexen2source-1.3.0/hexenworld/Client/gl_screen.c hexen2source-1.3.0x/hexenworld/Client/gl_screen.c
--- hexen2source-1.3.0/hexenworld/Client/gl_screen.c	2005-08-23 15:31:43.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/gl_screen.c	2005-08-29 17:45:36.000000000 +0300
@@ -850,40 +850,40 @@ void SB_IntermissionOverlay(void)
 	switch(cl.intermission)
 	{
 		case 1:
-			pic = Draw_CachePicNoTrans ("gfx/meso.lmp");
+			pic = Draw_CachePic ("gfx/meso.lmp");
 			break;
 		case 2:
-			pic = Draw_CachePicNoTrans ("gfx/egypt.lmp");
+			pic = Draw_CachePic ("gfx/egypt.lmp");
 			break;
 		case 3:
-			pic = Draw_CachePicNoTrans ("gfx/roman.lmp");
+			pic = Draw_CachePic ("gfx/roman.lmp");
 			break;
 		case 4:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 5:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 6:
-			pic = Draw_CachePicNoTrans ("gfx/end-1.lmp");
+			pic = Draw_CachePic ("gfx/end-1.lmp");
 			break;
 		case 7:
-			pic = Draw_CachePicNoTrans ("gfx/end-2.lmp");
+			pic = Draw_CachePic ("gfx/end-2.lmp");
 			break;
 		case 8:
-			pic = Draw_CachePicNoTrans ("gfx/end-3.lmp");
+			pic = Draw_CachePic ("gfx/end-3.lmp");
 			break;
 		case 9:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 10://Defender win - wipe out or time limit
-			pic = Draw_CachePicNoTrans ("gfx/defwin.lmp");
+			pic = Draw_CachePic ("gfx/defwin.lmp");
 			break;
 		case 11://Attacker win - caught crown
-			pic = Draw_CachePicNoTrans ("gfx/attwin.lmp");
+			pic = Draw_CachePic ("gfx/attwin.lmp");
 			break;
 		case 12://Attacker win 2 - wiped out
-			pic = Draw_CachePicNoTrans ("gfx/attwin2.lmp");
+			pic = Draw_CachePic ("gfx/attwin2.lmp");
 			break;
 		default:
 			pic = NULL;
@@ -892,8 +892,7 @@ void SB_IntermissionOverlay(void)
 	if (pic == NULL)
 		Sys_Error ("SB_IntermissionOverlay: Bad episode");
 
-	//Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
-	Draw_IntermissionPic(pic);
+	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
 
 	if (cl.intermission >= 6 && cl.intermission <= 8)
 	{
@@ -1013,9 +1012,7 @@ void SCR_UpdateScreen (void)
 //
 	SCR_SetUpToDrawConsole ();
 	
-	// no need to draw view in fullscreen intermission screens
-	//if (cl.intermission > 1 || cl.intermission <= 12)
-	if (cl.intermission < 1 || cl.intermission > 12)
+	if (cl.intermission > 1 || cl.intermission <= 12)
 	{
 		V_RenderView ();
 	}
diff -urNp hexen2source-1.3.0/hexenworld/Client/menu.c hexen2source-1.3.0x/hexenworld/Client/menu.c
--- hexen2source-1.3.0/hexenworld/Client/menu.c	2005-08-18 17:20:28.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/menu.c	2005-08-29 17:42:14.000000000 +0300
@@ -1390,17 +1390,9 @@ void M_Menu_Help_f (void)
 void M_Help_Draw (void)
 {
 	if(cl_siege)
-#ifdef GLQUAKE
-		Draw_IntermissionPic(Draw_CachePicNoTrans(va("gfx/menu/sghelp%02i.lmp", help_page+1)));
-#else
-		Draw_Pic (0, 0, Draw_CachePicResize(va("gfx/menu/sghelp%02i.lmp", help_page+1), vid.width, vid.height));
-#endif
+		M_DrawPic (0, 0, Draw_CachePic ( va("gfx/menu/sghelp%02i.lmp", help_page+1)) );
 	else
-#ifdef GLQUAKE
-		Draw_IntermissionPic(Draw_CachePicNoTrans(va("gfx/menu/help%02i.lmp", help_page+1)));
-#else
-		Draw_Pic (0, 0, Draw_CachePicResize(va("gfx/menu/help%02i.lmp", help_page+1), vid.width, vid.height));
-#endif
+		M_DrawPic (0, 0, Draw_CachePic ( va("gfx/menu/help%02i.lmp", help_page+1)) );
 }
 
 
diff -urNp hexen2source-1.3.0/hexenworld/Client/screen.c hexen2source-1.3.0x/hexenworld/Client/screen.c
--- hexen2source-1.3.0/hexenworld/Client/screen.c	2005-08-23 15:31:43.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/screen.c	2005-08-29 17:58:34.000000000 +0300
@@ -1105,42 +1105,41 @@ void SB_IntermissionOverlay(void)
 	
 	switch(cl.intermission)
 	{
-		// Pa3PyX: pics are now resized to screen size upon load
 		case 1:
-			pic = Draw_CachePicResize("gfx/meso.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/meso.lmp");
 			break;
 		case 2:
-			pic = Draw_CachePicResize("gfx/egypt.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/egypt.lmp");
 			break;
 		case 3:
-			pic = Draw_CachePicResize("gfx/roman.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/roman.lmp");
 			break;
 		case 4:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 5:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 6:
-			pic = Draw_CachePicResize("gfx/end-1.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-1.lmp");
 			break;
 		case 7:
-			pic = Draw_CachePicResize("gfx/end-2.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-2.lmp");
 			break;
 		case 8:
-			pic = Draw_CachePicResize("gfx/end-3.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-3.lmp");
 			break;
 		case 9:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 10://Defender win - wipe out or time limit
-			pic = Draw_CachePicResize("gfx/defwin.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/defwin.lmp");
 			break;
 		case 11://Attacker win - caught crown
-			pic = Draw_CachePicResize("gfx/attwin.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/attwin.lmp");
 			break;
 		case 12://Attacker win 2 - wiped out
-			pic = Draw_CachePicResize("gfx/attwin2.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/attwin2.lmp");
 			break;
 		default:
 			pic = NULL;
@@ -1149,9 +1148,7 @@ void SB_IntermissionOverlay(void)
 	if (pic == NULL)
 		Sys_Error ("SB_IntermissionOverlay: Bad episode");
 
-	// Pa3PyX: intermissions will now be always drawn full screen size
-//	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
-	Draw_Pic(0, 0, pic);
+	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
 
 	if (cl.intermission >= 6 && cl.intermission <= 8)
 	{
diff -urNp hexen2source-1.3.0/hexenworld/Client/vid_sdl.c hexen2source-1.3.0x/hexenworld/Client/vid_sdl.c
--- hexen2source-1.3.0/hexenworld/Client/vid_sdl.c	2005-08-11 02:19:26.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/vid_sdl.c	2005-08-29 17:50:56.000000000 +0300
@@ -43,7 +43,7 @@ byte globalcolormap[VID_GRADES*256], las
 byte *lastsourcecolormap = NULL;
 
 //intermission screen cache reference (to flush on video mode switch)
-extern cache_user_t	*intermissionScreen;
+//extern cache_user_t	*intermissionScreen;
 
 static qboolean	vid_initialized = false, vid_palettized = true;
 static int	lockcount;
@@ -377,8 +377,8 @@ int VID_SetMode (int modenum, unsigned c
 	in_mode_set = true;
 
 	//flush the intermission screen if it's cached (Pa3PyX)
-	if (intermissionScreen && intermissionScreen->data)
-		Cache_Free(intermissionScreen);
+//	if (intermissionScreen && intermissionScreen->data)
+//		Cache_Free(intermissionScreen);
 
 	if (vid_modenum == NO_MODE)
 		original_mode = windowed_default;
diff -urNp hexen2source-1.3.0/hexenworld/Client/win_stuff/vid_win.c hexen2source-1.3.0x/hexenworld/Client/win_stuff/vid_win.c
--- hexen2source-1.3.0/hexenworld/Client/win_stuff/vid_win.c	2005-08-11 23:45:05.000000000 +0300
+++ hexen2source-1.3.0x/hexenworld/Client/win_stuff/vid_win.c	2005-08-29 17:51:09.000000000 +0300
@@ -19,7 +19,7 @@ HWND		mainwindow;
 HWND WINAPI InitializeWindow (HINSTANCE hInstance, int nCmdShow);
 
 //intermission screen cache reference (to flush on video mode switch)
-extern	cache_user_t	*intermissionScreen;
+//extern	cache_user_t	*intermissionScreen;
 
 int			DIBWidth, DIBHeight;
 qboolean	DDActive;
@@ -1590,8 +1590,8 @@ int VID_SetMode (int modenum, unsigned c
 	S_ClearBuffer ();
 
 	//flush the intermission screen if it's cached (Pa3PyX)
-	if (intermissionScreen && intermissionScreen->data)
-		Cache_Free(intermissionScreen);
+//	if (intermissionScreen && intermissionScreen->data)
+//		Cache_Free(intermissionScreen);
 
 	if (vid_modenum == NO_MODE)
 		original_mode = windowed_default;

