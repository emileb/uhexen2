reverts fullscreen intermission code usage. intermissions and help
screens will be drawn with their original size (320x240) no matter
what the resolution is.
If you really want this, that is...

diff -urNp uhexen2-20060112/hexen2/gl_dl_screen.c uhexen2-20060112b/hexen2/gl_dl_screen.c
--- uhexen2-20060112/hexen2/gl_dl_screen.c	2006-01-12 14:34:37.000000000 +0200
+++ uhexen2-20060112b/hexen2/gl_dl_screen.c	2006-01-12 15:56:06.000000000 +0200
@@ -1006,40 +1006,40 @@ void SB_IntermissionOverlay(void)
 	switch(cl.intermission)
 	{
 		case 1:
-			pic = Draw_CachePicNoTrans ("gfx/meso.lmp");
+			pic = Draw_CachePic ("gfx/meso.lmp");
 			break;
 		case 2:
-			pic = Draw_CachePicNoTrans ("gfx/egypt.lmp");
+			pic = Draw_CachePic ("gfx/egypt.lmp");
 			break;
 		case 3:
-			pic = Draw_CachePicNoTrans ("gfx/roman.lmp");
+			pic = Draw_CachePic ("gfx/roman.lmp");
 			break;
 		case 4:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 5:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 6:
-			pic = Draw_CachePicNoTrans ("gfx/end-1.lmp");
+			pic = Draw_CachePic ("gfx/end-1.lmp");
 			break;
 		case 7:
-			pic = Draw_CachePicNoTrans ("gfx/end-2.lmp");
+			pic = Draw_CachePic ("gfx/end-2.lmp");
 			break;
 		case 8:
-			pic = Draw_CachePicNoTrans ("gfx/end-3.lmp");
+			pic = Draw_CachePic ("gfx/end-3.lmp");
 			break;
 		case 9:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 10:
-			pic = Draw_CachePicNoTrans ("gfx/mpend.lmp");
+			pic = Draw_CachePic ("gfx/mpend.lmp");
 			break;
 		case 11:
-			pic = Draw_CachePicNoTrans ("gfx/mpmid.lmp");
+			pic = Draw_CachePic ("gfx/mpmid.lmp");
 			break;
 		case 12:
-			pic = Draw_CachePicNoTrans ("gfx/end-3.lmp");
+			pic = Draw_CachePic ("gfx/end-3.lmp");
 			break;
 		default:
 			pic = NULL;
@@ -1048,8 +1048,7 @@ void SB_IntermissionOverlay(void)
 	if (pic == NULL)
 		Sys_Error ("SB_IntermissionOverlay: Bad episode");
 
-	//Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
-	Draw_IntermissionPic(pic);
+	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
 
 	if (cl.intermission >= 6 && cl.intermission <= 8)
 	{
@@ -1198,9 +1197,7 @@ void SCR_UpdateScreen (void)
 //
 	SCR_SetUpToDrawConsole ();
 	
-	// no need to draw view in fullscreen intermission screens
-	//if (cl.intermission > 1 || cl.intermission <= 12) {
-	if (cl.intermission < 1 || cl.intermission > 12)
+	if (cl.intermission > 1 || cl.intermission <= 12)
 	{
 		V_RenderView ();
 	}
diff -urNp uhexen2-20060112/hexen2/menu.c uhexen2-20060112b/hexen2/menu.c
--- uhexen2-20060112/hexen2/menu.c	2006-01-12 14:34:38.000000000 +0200
+++ uhexen2-20060112b/hexen2/menu.c	2006-01-12 15:56:06.000000000 +0200
@@ -2431,11 +2431,7 @@ void M_Menu_Help_f (void)
 
 void M_Help_Draw (void)
 {
-#ifdef GLQUAKE
-	Draw_IntermissionPic(Draw_CachePicNoTrans(va("gfx/menu/help%02i.lmp", help_page+1)));
-#else
-	Draw_Pic (0, 0, Draw_CachePicResize(va("gfx/menu/help%02i.lmp", help_page+1), vid.width, vid.height));
-#endif
+	M_DrawPic (0, 0, Draw_CachePic ( va("gfx/menu/help%02i.lmp", help_page+1)) );
 }
 
 
diff -urNp uhexen2-20060112/hexen2/screen.c uhexen2-20060112b/hexen2/screen.c
--- uhexen2-20060112/hexen2/screen.c	2005-12-11 13:56:33.000000000 +0200
+++ uhexen2-20060112b/hexen2/screen.c	2006-01-12 15:56:06.000000000 +0200
@@ -1354,42 +1354,41 @@ void SB_IntermissionOverlay(void)
 	
 	switch(cl.intermission)
 	{
-		// Pa3PyX: pics are now resized to screen size upon load
 		case 1:
-			pic = Draw_CachePicResize("gfx/meso.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/meso.lmp");
 			break;
 		case 2:
-			pic = Draw_CachePicResize("gfx/egypt.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/egypt.lmp");
 			break;
 		case 3:
-			pic = Draw_CachePicResize("gfx/roman.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/roman.lmp");
 			break;
 		case 4:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 5:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 6:
-			pic = Draw_CachePicResize("gfx/end-1.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-1.lmp");
 			break;
 		case 7:
-			pic = Draw_CachePicResize("gfx/end-2.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-2.lmp");
 			break;
 		case 8:
-			pic = Draw_CachePicResize("gfx/end-3.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-3.lmp");
 			break;
 		case 9:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 10:
-			pic = Draw_CachePicResize("gfx/mpend.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/mpend.lmp");
 			break;
 		case 11:
-			pic = Draw_CachePicResize("gfx/mpmid.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/mpmid.lmp");
 			break;
 		case 12:
-			pic = Draw_CachePicResize("gfx/end-3.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-3.lmp");
 			break;
 		default:
 			pic = NULL;
@@ -1398,9 +1397,7 @@ void SB_IntermissionOverlay(void)
 	if (pic == NULL)
 		Sys_Error ("SB_IntermissionOverlay: Bad episode");
 
-	// Pa3PyX: intermissions will now be always drawn full screen size
-//	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
-	Draw_Pic(0, 0, pic);
+	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
 
 	if (cl.intermission >= 6 && cl.intermission <= 8)
 	{
diff -urNp uhexen2-20060112/hexen2/vid_sdl.c uhexen2-20060112b/hexen2/vid_sdl.c
--- uhexen2-20060112/hexen2/vid_sdl.c	2006-01-12 14:43:49.000000000 +0200
+++ uhexen2-20060112b/hexen2/vid_sdl.c	2006-01-12 15:56:06.000000000 +0200
@@ -31,7 +31,7 @@ byte globalcolormap[VID_GRADES*256], las
 byte *lastsourcecolormap = NULL;
 
 //intermission screen cache reference (to flush on video mode switch)
-extern cache_user_t	*intermissionScreen;
+//extern cache_user_t	*intermissionScreen;
 
 static qboolean	vid_initialized = false;
 static int	lockcount;
@@ -473,8 +473,8 @@ static int VID_SetMode (int modenum, uns
 	in_mode_set = true;
 
 	//flush the intermission screen if it's cached (Pa3PyX)
-	if (intermissionScreen && intermissionScreen->data)
-		Cache_Free(intermissionScreen);
+//	if (intermissionScreen && intermissionScreen->data)
+//		Cache_Free(intermissionScreen);
 
 	if (screen)
 		SDL_FreeSurface(screen);
diff -urNp uhexen2-20060112/hexen2/win_stuff/vid_win.c uhexen2-20060112b/hexen2/win_stuff/vid_win.c
--- uhexen2-20060112/hexen2/win_stuff/vid_win.c	2006-01-07 11:54:29.000000000 +0200
+++ uhexen2-20060112b/hexen2/win_stuff/vid_win.c	2006-01-12 15:56:06.000000000 +0200
@@ -23,7 +23,7 @@ static qboolean	dibonly;
 HWND		mainwindow, dibwindow;
 
 //intermission screen cache reference (to flush on video mode switch)
-extern	cache_user_t	*intermissionScreen;
+//extern	cache_user_t	*intermissionScreen;
 
 static int	DIBWidth, DIBHeight;
 qboolean	DDActive;
@@ -1605,8 +1605,8 @@ static int VID_SetMode (int modenum, uns
 	CDAudio_Pause ();
 
 	//flush the intermission screen if it's cached (Pa3PyX)
-	if (intermissionScreen && intermissionScreen->data)
-		Cache_Free(intermissionScreen);
+//	if (intermissionScreen && intermissionScreen->data)
+//		Cache_Free(intermissionScreen);
 
 	if (vid_modenum == NO_MODE)
 		original_mode = windowed_default;
diff -urNp uhexen2-20060112/hexenworld/Client/gl_screen.c uhexen2-20060112b/hexenworld/Client/gl_screen.c
--- uhexen2-20060112/hexenworld/Client/gl_screen.c	2006-01-12 14:34:38.000000000 +0200
+++ uhexen2-20060112b/hexenworld/Client/gl_screen.c	2006-01-12 15:56:06.000000000 +0200
@@ -851,40 +851,40 @@ void SB_IntermissionOverlay(void)
 	switch(cl.intermission)
 	{
 		case 1:
-			pic = Draw_CachePicNoTrans ("gfx/meso.lmp");
+			pic = Draw_CachePic ("gfx/meso.lmp");
 			break;
 		case 2:
-			pic = Draw_CachePicNoTrans ("gfx/egypt.lmp");
+			pic = Draw_CachePic ("gfx/egypt.lmp");
 			break;
 		case 3:
-			pic = Draw_CachePicNoTrans ("gfx/roman.lmp");
+			pic = Draw_CachePic ("gfx/roman.lmp");
 			break;
 		case 4:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 5:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 6:
-			pic = Draw_CachePicNoTrans ("gfx/end-1.lmp");
+			pic = Draw_CachePic ("gfx/end-1.lmp");
 			break;
 		case 7:
-			pic = Draw_CachePicNoTrans ("gfx/end-2.lmp");
+			pic = Draw_CachePic ("gfx/end-2.lmp");
 			break;
 		case 8:
-			pic = Draw_CachePicNoTrans ("gfx/end-3.lmp");
+			pic = Draw_CachePic ("gfx/end-3.lmp");
 			break;
 		case 9:
-			pic = Draw_CachePicNoTrans ("gfx/castle.lmp");
+			pic = Draw_CachePic ("gfx/castle.lmp");
 			break;
 		case 10://Defender win - wipe out or time limit
-			pic = Draw_CachePicNoTrans ("gfx/defwin.lmp");
+			pic = Draw_CachePic ("gfx/defwin.lmp");
 			break;
 		case 11://Attacker win - caught crown
-			pic = Draw_CachePicNoTrans ("gfx/attwin.lmp");
+			pic = Draw_CachePic ("gfx/attwin.lmp");
 			break;
 		case 12://Attacker win 2 - wiped out
-			pic = Draw_CachePicNoTrans ("gfx/attwin2.lmp");
+			pic = Draw_CachePic ("gfx/attwin2.lmp");
 			break;
 		default:
 			pic = NULL;
@@ -893,8 +893,7 @@ void SB_IntermissionOverlay(void)
 	if (pic == NULL)
 		Sys_Error ("SB_IntermissionOverlay: Bad episode");
 
-	//Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
-	Draw_IntermissionPic(pic);
+	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
 
 	if (cl.intermission >= 6 && cl.intermission <= 8)
 	{
@@ -1014,9 +1013,7 @@ void SCR_UpdateScreen (void)
 //
 	SCR_SetUpToDrawConsole ();
 	
-	// no need to draw view in fullscreen intermission screens
-	//if (cl.intermission > 1 || cl.intermission <= 12)
-	if (cl.intermission < 1 || cl.intermission > 12)
+	if (cl.intermission > 1 || cl.intermission <= 12)
 	{
 		V_RenderView ();
 	}
diff -urNp uhexen2-20060112/hexenworld/Client/menu.c uhexen2-20060112b/hexenworld/Client/menu.c
--- uhexen2-20060112/hexenworld/Client/menu.c	2006-01-12 14:34:38.000000000 +0200
+++ uhexen2-20060112b/hexenworld/Client/menu.c	2006-01-12 15:56:06.000000000 +0200
@@ -1385,17 +1385,9 @@ void M_Menu_Help_f (void)
 void M_Help_Draw (void)
 {
 	if(cl_siege)
-#ifdef GLQUAKE
-		Draw_IntermissionPic(Draw_CachePicNoTrans(va("gfx/menu/sghelp%02i.lmp", help_page+1)));
-#else
-		Draw_Pic (0, 0, Draw_CachePicResize(va("gfx/menu/sghelp%02i.lmp", help_page+1), vid.width, vid.height));
-#endif
+		M_DrawPic (0, 0, Draw_CachePic ( va("gfx/menu/sghelp%02i.lmp", help_page+1)) );
 	else
-#ifdef GLQUAKE
-		Draw_IntermissionPic(Draw_CachePicNoTrans(va("gfx/menu/help%02i.lmp", help_page+1)));
-#else
-		Draw_Pic (0, 0, Draw_CachePicResize(va("gfx/menu/help%02i.lmp", help_page+1), vid.width, vid.height));
-#endif
+		M_DrawPic (0, 0, Draw_CachePic ( va("gfx/menu/help%02i.lmp", help_page+1)) );
 }
 
 
diff -urNp uhexen2-20060112/hexenworld/Client/screen.c uhexen2-20060112b/hexenworld/Client/screen.c
--- uhexen2-20060112/hexenworld/Client/screen.c	2005-09-19 22:50:10.000000000 +0300
+++ uhexen2-20060112b/hexenworld/Client/screen.c	2006-01-12 15:56:06.000000000 +0200
@@ -1105,42 +1105,41 @@ void SB_IntermissionOverlay(void)
 	
 	switch(cl.intermission)
 	{
-		// Pa3PyX: pics are now resized to screen size upon load
 		case 1:
-			pic = Draw_CachePicResize("gfx/meso.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/meso.lmp");
 			break;
 		case 2:
-			pic = Draw_CachePicResize("gfx/egypt.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/egypt.lmp");
 			break;
 		case 3:
-			pic = Draw_CachePicResize("gfx/roman.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/roman.lmp");
 			break;
 		case 4:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 5:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 6:
-			pic = Draw_CachePicResize("gfx/end-1.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-1.lmp");
 			break;
 		case 7:
-			pic = Draw_CachePicResize("gfx/end-2.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-2.lmp");
 			break;
 		case 8:
-			pic = Draw_CachePicResize("gfx/end-3.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/end-3.lmp");
 			break;
 		case 9:
-			pic = Draw_CachePicResize("gfx/castle.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/castle.lmp");
 			break;
 		case 10://Defender win - wipe out or time limit
-			pic = Draw_CachePicResize("gfx/defwin.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/defwin.lmp");
 			break;
 		case 11://Attacker win - caught crown
-			pic = Draw_CachePicResize("gfx/attwin.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/attwin.lmp");
 			break;
 		case 12://Attacker win 2 - wiped out
-			pic = Draw_CachePicResize("gfx/attwin2.lmp", vid.width, vid.height);
+			pic = Draw_CachePic("gfx/attwin2.lmp");
 			break;
 		default:
 			pic = NULL;
@@ -1149,9 +1148,7 @@ void SB_IntermissionOverlay(void)
 	if (pic == NULL)
 		Sys_Error ("SB_IntermissionOverlay: Bad episode");
 
-	// Pa3PyX: intermissions will now be always drawn full screen size
-//	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
-	Draw_Pic(0, 0, pic);
+	Draw_Pic (((vid.width - 320)>>1),((vid.height - 200)>>1), pic);
 
 	if (cl.intermission >= 6 && cl.intermission <= 8)
 	{
diff -urNp uhexen2-20060112/hexenworld/Client/vid_sdl.c uhexen2-20060112b/hexenworld/Client/vid_sdl.c
--- uhexen2-20060112/hexenworld/Client/vid_sdl.c	2006-01-12 14:43:49.000000000 +0200
+++ uhexen2-20060112b/hexenworld/Client/vid_sdl.c	2006-01-12 15:56:06.000000000 +0200
@@ -31,7 +31,7 @@ byte globalcolormap[VID_GRADES*256], las
 byte *lastsourcecolormap = NULL;
 
 //intermission screen cache reference (to flush on video mode switch)
-extern cache_user_t	*intermissionScreen;
+//extern cache_user_t	*intermissionScreen;
 
 static qboolean	vid_initialized = false;
 static int	lockcount;
@@ -473,8 +473,8 @@ static int VID_SetMode (int modenum, uns
 	in_mode_set = true;
 
 	//flush the intermission screen if it's cached (Pa3PyX)
-	if (intermissionScreen && intermissionScreen->data)
-		Cache_Free(intermissionScreen);
+//	if (intermissionScreen && intermissionScreen->data)
+//		Cache_Free(intermissionScreen);
 
 	if (screen)
 		SDL_FreeSurface(screen);
diff -urNp uhexen2-20060112/hexenworld/Client/win_stuff/vid_win.c uhexen2-20060112b/hexenworld/Client/win_stuff/vid_win.c
--- uhexen2-20060112/hexenworld/Client/win_stuff/vid_win.c	2006-01-07 11:54:29.000000000 +0200
+++ uhexen2-20060112b/hexenworld/Client/win_stuff/vid_win.c	2006-01-12 15:56:06.000000000 +0200
@@ -23,7 +23,7 @@ static qboolean	dibonly;
 HWND		mainwindow;
 
 //intermission screen cache reference (to flush on video mode switch)
-extern	cache_user_t	*intermissionScreen;
+//extern	cache_user_t	*intermissionScreen;
 
 static int	DIBWidth, DIBHeight;
 qboolean	DDActive;
@@ -1662,8 +1662,8 @@ static int VID_SetMode (int modenum, uns
 	S_ClearBuffer ();
 
 	//flush the intermission screen if it's cached (Pa3PyX)
-	if (intermissionScreen && intermissionScreen->data)
-		Cache_Free(intermissionScreen);
+//	if (intermissionScreen && intermissionScreen->data)
+//		Cache_Free(intermissionScreen);
 
 	if (vid_modenum == NO_MODE)
 		original_mode = windowed_default;
