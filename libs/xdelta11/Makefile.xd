# GNU Makefile for xdelta using GCC.
# $Id$
#
# this short Makefile is intended for skipping the autotools
# support when building xdelta. You may have to play with a
# few of the options below.
# By default, it will link against glib-2.x. If you want to
# build against glib-1.2.x instead, run:  make GLIB1=yes

HOST_OS:=$(shell uname|sed -e s/_.*//|tr '[:upper:]' '[:lower:]')

CC ?= gcc
ifeq ($(CC),)
CC := gcc
endif
AR ?= ar
RANLIB ?= ranlib

LINKER= $(CC)

# whether we have ANSI C header files
STDC_HEADERS=1
# whether we can safely include both <sys/time.h> and <time.h>
TIME_WITH_SYS_TIME=1
# whether we have the <limits.h> header
HAVE_LIMITS_H=1

# copy command:
CMD_CP= cp -p

# Compiler flags

CPUFLAGS=
CPPFLAGS=
CFLAGS  =
LDFLAGS =
INCLUDES= -I. -I./libedsio

CFLAGS += $(CPUFLAGS) -O2 -Wall

ifdef GLIB1
CPPFLAGS += -D_XD_USE_GLIB1
GLIB_CFLAGS=$(shell glib-config --cflags)
GLIB_LIBS=$(shell glib-config --libs)
else
GLIB_CFLAGS=$(shell pkg-config --cflags glib-2.0)
GLIB_LIBS=$(shell pkg-config --libs glib-2.0)
endif

ifeq ($(STDC_HEADERS),1)
CPPFLAGS += -DSTDC_HEADERS=1
endif
ifeq ($(HAVE_LIMITS_H),1)
CPPFLAGS += -DHAVE_LIMITS_H=1
endif
ifeq ($(TIME_WITH_SYS_TIME),1)
CPPFLAGS += -DTIME_WITH_SYS_TIME=1
endif

LDFLAGS += -lz $(GLIB_LIBS)

# end of compiler flags

# Rules for turning source files into .o files
%.o: %.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(GLIB_CFLAGS) -o $@ $<
libedsio/%.o: libedsio/%.c
	$(CC) -c $(CFLAGS) $(CPPFLAGS) $(INCLUDES) $(GLIB_CFLAGS) -o $@ $<

# Objects
LIBEDSIO_OBJS = libedsio/library.o \
		libedsio/simple.o \
		libedsio/edsio.o \
		libedsio/edsio_edsio.o \
		libedsio/md5c.o \
		libedsio/fh.o \
		libedsio/generic.o \
		libedsio/default.o \
		libedsio/base64.o \
		libedsio/maketime.o \
		libedsio/partime.o
# SHA is unused in present code, removed it.
#		libedsio/sha.o

LIBXDELTA_OBJS= xdelta.o \
		xdapply.o \
		xd_edsio.o

XDELTA_OBJS = xdmain.o getopt.o getopt1.o

# Targets

default: xdelta114
libxdelta: libxdelta.a
all: default libxdelta

libxdelta.a: $(LIBEDSIO_OBJS) $(LIBXDELTA_OBJS) $(XDELTA_OBJS)
	$(AR) cru libxdelta.a $(LIBEDSIO_OBJS) $(LIBXDELTA_OBJS) $(XDELTA_OBJS)
	$(RANLIB) libxdelta.a

xdelta114: xdelta
	$(CMD_CP) xdelta xdelta114

xdelta: $(LIBEDSIO_OBJS) $(LIBXDELTA_OBJS) $(XDELTA_OBJS)
	$(LINKER) -o xdelta $(LIBXDELTA_OBJS) $(LIBEDSIO_OBJS) $(XDELTA_OBJS) $(LDFLAGS)

clean:
	rm -f *.o libedsio/*.o

cleaner:
	rm -f *.o libedsio/*.o libxdelta.a xdelta xdelta114

