--- fixed.h.orig
+++ fixed.h
@@ -161,6 +161,20 @@
 
 #   define mad_f_mul		mad_f_mul_inline
 #   define mad_f_scale64
+
+#  elif defined (__WATCOMC__)
+mad_fixed_t mad_f_mul_inl(mad_fixed_t,mad_fixed_t);
+/* 28 == MAD_F_FRACBITS */
+#pragma aux mad_f_mul_inl =		\
+	"imul ebx",			\
+	"shrd eax,edx,28"		\
+	parm	[eax] [ebx]		\
+	value	[eax]			\
+	modify exact [eax edx]
+
+#   define mad_f_mul		mad_f_mul_inl
+#   define mad_f_scale64
+
 #  else
 /*
  * This Intel version is fast and accurate; the disposition of the least
--- /dev/null
+++ Makefile.os2
@@ -0,0 +1,23 @@
+# build libmad using OpenWatcom for OS/2 as a static libary
+#
+
+CFLAGS  = -bt=os2 -bm -fp5 -fpi87 -mf -oeatxh -w4 -ei -zp8
+# -5s  :  Pentium stack calling conventions.
+# -5r  :  Pentium register calling conventions.
+CFLAGS += -5s
+CPPFLAGS= -DFPM_INTEL
+CPPFLAGS+= -DNDEBUG
+CPPFLAGS+= -DHAVE_ASSERT_H -DHAVE_LIMITS_H
+LIBNAME = mad.lib
+
+COMPILE = wcc386 -q $(CFLAGS) $(CPPFLAGS)
+
+OBJ = version.obj fixed.obj bit.obj timer.obj stream.obj frame.obj synth.obj layer12.obj layer3.obj huffman.obj
+
+all: $(LIBNAME)
+
+$(LIBNAME): $(OBJ)
+	wlib -q -b -n $@ $(OBJ)
+
+.c.obj:
+	$(COMPILE) -fo=$^@ $<
--- timer.c.orig
+++ timer.c
@@ -342,6 +342,7 @@ unsigned long mad_timer_fraction(mad_tim
  * NAME:	timer->string()
  * DESCRIPTION:	write a string representation of a timer using a template
  */
+#if 0 /* NOT NEEDED in uHexen2 */
 void mad_timer_string(mad_timer_t timer,
 		      char *dest, char const *format, enum mad_units units,
 		      enum mad_units fracunits, unsigned long subparts)
@@ -483,3 +484,5 @@ void mad_timer_string(mad_timer_t timer,
     break;
   }
 }
+#endif /* NOT NEEDED in uHexen2 */
+
