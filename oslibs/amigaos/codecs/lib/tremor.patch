changes to Tremor (libvorbisidec) to make it build for m68k-amigaos with VBCC and GCC

--- /dev/null
+++ Tremor/Makefile.vbcc
@@ -0,0 +1,24 @@
+INCLUDE = -Iinclude
+CFLAGS  = -O1 -speed -c99 -cpu=68060 -fpu=68060 -D__AMIGA__ $(INCLUDE)
+CFLAGS += -D_LOW_ACCURACY_
+LIBNAME =  vorbisidec.lib
+
+CC      = vc
+# +m68kdb
+#MKLIB   = join $(LIBOBJ) as $(LIBNAME)
+MKLIB   = cat $(LIBOBJ) > $(LIBNAME)
+
+LIBOBJ = mdct.o block.o window.o synthesis.o info.o floor1.o floor0.o vorbisfile.o res012.o mapping0.o registry.o codebook.o sharedbook.o
+
+all: $(LIBNAME)
+
+$(LIBNAME): $(LIBOBJ)
+	$(MKLIB)
+
+%.o: %.c
+	$(CC) $(CFLAGS) -c -o $@ $<
+
+clean:
+	$(RM) *.o
+distclean: clean
+	$(RM) $(LIBNAME)
--- /dev/null
+++ Tremor/Makefile.aos3
@@ -0,0 +1,24 @@
+INCLUDE = -Iinclude
+CFLAGS  = -O2 -m68020-60 -Wall $(INCLUDE)
+CFLAGS += -D_LOW_ACCURACY_
+LIBNAME =  libvorbisidec.a
+
+CC      = m68k-amigaos-gcc
+AR      = m68k-amigaos-ar
+RANLIB  = m68k-amigaos-ranlib
+
+LIBOBJ = mdct.o block.o window.o synthesis.o info.o floor1.o floor0.o vorbisfile.o res012.o mapping0.o registry.o codebook.o sharedbook.o
+
+all: $(LIBNAME)
+
+$(LIBNAME): $(LIBOBJ)
+	$(AR) cru $(LIBNAME) $(LIBOBJ)
+	$(RANLIB) $(LIBNAME)
+
+%.o: %.c
+	$(CC) $(CFLAGS) -c -o $@ $<
+
+clean:
+	$(RM) *.o
+distclean: clean
+	$(RM) $(LIBNAME)
--- Tremor-svn-r19427/os.h
+++ Tremor/os.h
@@ -25,6 +25,8 @@
 
 #  ifdef __GNUC__
 #    define STIN static __inline__
+#  elif defined(__VBCC__)
+#    define STIN static inline
 #  elif _WIN32
 #    define STIN static __inline
 #  endif
@@ -45,6 +47,12 @@
 #  define BYTE_ORDER LITTLE_ENDIAN
 #endif
 
+#if defined(__mc68000__) || defined(__M68K__) || defined(__m68k__)
+#  define LITTLE_ENDIAN 1234
+#  define BIG_ENDIAN 4321
+#  define BYTE_ORDER BIG_ENDIAN
+#endif
+
 #ifdef HAVE_ALLOCA_H
 #  include <alloca.h>
 #endif
--- Tremor-svn-r19427/mdct.c
+++ Tremor/mdct.c
@@ -147,7 +147,7 @@ STIN void mdct_butterfly_32(DATA_TYPE *x
 /* N/stage point generic N stage butterfly (in place, 2 register) */
 STIN void mdct_butterfly_generic(DATA_TYPE *x,int points,int step){
 
-  LOOKUP_T *T   = sincos_lookup0;
+  const LOOKUP_T *T   = sincos_lookup0;
   DATA_TYPE *x1        = x + points      - 8;
   DATA_TYPE *x2        = x + (points>>1) - 8;
   REG_TYPE   r0;
@@ -257,8 +257,8 @@ STIN void mdct_bitreverse(DATA_TYPE *x,i
   int          bit   = 0;
   DATA_TYPE   *w0    = x;
   DATA_TYPE   *w1    = x = w0+(n>>1);
-  LOOKUP_T    *T = (step>=4)?(sincos_lookup0+(step>>1)):sincos_lookup1;
-  LOOKUP_T    *Ttop  = T+1024;
+  const LOOKUP_T *T = (step>=4)?(sincos_lookup0+(step>>1)):sincos_lookup1;
+  const LOOKUP_T *Ttop  = T+1024;
   DATA_TYPE    r2;
 
   do{
@@ -342,8 +342,8 @@ void mdct_backward(int n, DATA_TYPE *in,
   int n4=n>>2;
   DATA_TYPE *iX;
   DATA_TYPE *oX;
-  LOOKUP_T *T;
-  LOOKUP_T *V;
+  const LOOKUP_T *T;
+  const LOOKUP_T *V;
   int shift;
   int step;
 
--- Tremor-svn-r19427/misc.h
+++ Tremor/misc.h
@@ -22,10 +22,10 @@
 
 #ifdef _LOW_ACCURACY_
 #  define X(n) (((((n)>>22)+1)>>1) - ((((n)>>22)+1)>>9))
-#  define LOOKUP_T const unsigned char
+#  define LOOKUP_T unsigned char
 #else
 #  define X(n) (n)
-#  define LOOKUP_T const ogg_int32_t
+#  define LOOKUP_T ogg_int32_t
 #endif
 
 #include "asm_arm.h"
@@ -37,7 +37,7 @@
 #ifndef  _LOW_ACCURACY_
 /* 64 bit multiply */
 
-#if !(defined WIN32 && defined WINCE)
+#if !(defined WIN32 && defined WINCE) && !defined(__VBCC__)
 #include <sys/types.h>
 #endif
 
--- Tremor-svn-r19427/window.c
+++ Tremor/window.c
@@ -56,7 +56,7 @@ void _vorbis_apply_window(ogg_int32_t *d
 			  long *blocksizes,
 			  int lW,int W,int nW){
   
-  LOOKUP_T *window[2]={window_p[0],window_p[1]};
+  const LOOKUP_T *window[2]={window_p[0],window_p[1]};
   long n=blocksizes[W];
   long ln=blocksizes[lW];
   long rn=blocksizes[nW];
