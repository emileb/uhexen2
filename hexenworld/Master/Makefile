# if building a debug version :		make DEBUG=1 [other stuff]

# To cross-compile for Win32 on Unix, you must pass the WINBUILD=1
# argument to make. It would be best if you examine the script named
# build_cross_win32.sh for cross compilation.

# Path settings:
# main uhexen2 relative path
UHEXEN2_TOP=../..

# include the common dirty stuff
include $(UHEXEN2_TOP)/scripts/makefile.inc

# include file for sanity checks
include $(UHEXEN2_TOP)/scripts/sanity1.inc

# Names of the binaries
ifeq ($(TARGET_OS),WIN32)
BINARY=hwmaster.exe
else
BINARY=hwmaster
endif

# Compiler flags

# Overrides for the default CPUFLAGS
ifeq ($(MACH_TYPE),x86)
CPUFLAGS:=-march=i386
endif
# Overrides for the default ARCHFLAGS
#ARCHFLAGS:=

ifndef DEBUG
CFLAGS := $(CPUFLAGS) -O2 -Wall
endif

# Other build flags
EXT_FLAGS:=$(ARCHFLAGS)

ifeq ($(TARGET_OS),WIN32)
INCLUDES := -I$(MINGWDIR)/include -idirafter .
LDFLAGS  := -L$(MINGWDIR)/lib -lwsock32 -lwinmm -mconsole
else
INCLUDES := -idirafter .
LDFLAGS  := $(LIBSOCKET)
EXT_FLAGS+= -DPLATFORM_UNIX
endif


# Rules for turning source files into .o files
%.o: %.c
	$(CC) -c $(CFLAGS) $(EXT_FLAGS) $(INCLUDES) -o $@ $<

# Objects
MASTEROBJS = cmds.o sys_main.o net.o

# Targets
default: $(BINARY)
all: default

# include file for sanity check target
include $(UHEXEN2_TOP)/scripts/sanity2.inc

$(BINARY) : $(MASTEROBJS)
	$(LINKER) -o $(BINARY) $(MASTEROBJS) $(LDFLAGS)

clean:
	rm -f *.o core .tmp *.tmp

