
#  if building for the demo version, run with
#  make DEMO=yes [other stuff]

USEMIDI=yes
USEALSA=yes
USE_SDLCD=no

GLMP_BINARY=glh2mp
GLMP_BINARY_STATIC=glh2mp.static

GLH2_BINARY=glhexen2
GLH2_BINARY_STATIC=glhexen2.static

MP_BINARY=h2mp
MP_BINARY_STATIC=h2mp.static

H2_BINARY=hexen2
H2_BINARY_STATIC=hexen2.static

AS = nasm
ifndef CC
CC = gcc
endif
LINKER = $(CC)
CFLAGS = -O2 -march=i586 -Wall -DPLATFORM_UNIX \
	-fomit-frame-pointer -ffast-math -fexpensive-optimizations \
	-falign-loops=2 -falign-jumps=2 -falign-functions=2
ifdef DEBUG
CFLAGS+= -DDEBUG -g
endif
GAMEFLAGS =
SDLFLAGS = `sdl-config --cflags`
SDLLINK = `sdl-config --libs`
LDFLAGS =
GLFLAGS = -L/usr/X11R6/lib
ASFLAGS = -f elf
LDSTATIC = -Wl,-Bstatic -L/usr/lib -lSDL_mixer -lSDL -L/usr/X11R6/lib -lX11 -lXext -ldl -L/usr/X11R6/lib -lXxf86dga -lXxf86vm -lXv -L/usr/lib/ -lsmpeg -lvorbisfile -lvorbis -logg -lm -Wl,-Bdynamic -lpthread

ifeq "$(USEMIDI)" "yes"
GAMEFLAGS+= -DUSE_MIDI
SDLLINK+= -lSDL_mixer
endif

ifeq "$(USEALSA)" "no"
GAMEFLAGS+= -DNO_ALSA
endif

ifeq "$(USE_SDLCD)" "yes"
GAMEFLAGS+= -DWITH_SDLCD
endif

ifdef DEMO
GAMEFLAGS+= -DDEMOBUILD
endif

# Rules for turning source files into .o files
%.o: %.c
	$(CC) -c $(CFLAGS) $(SDLFLAGS) $(GAMEFLAGS) -o $@ $<
%.o: %.asm
	$(AS) $(ASFLAGS) -o $@ $<

SOFTOBJS = d_edge.o \
	d_fill.o \
	d_init.o \
	d_modech.o \
	d_part.o \
	d_polyse.o \
	d_scan.o \
	d_sky.o \
	d_sprite.o \
	d_surf.o \
	d_vars.o \
	d_zpoint.o \
	draw.o \
	model.o \
	r_aclip.o \
	r_alias.o \
	r_bsp.o \
	r_draw.o \
	r_edge.o \
	r_efrag.o \
	r_light.o \
	r_main.o \
	r_misc.o \
	r_sky.o \
	r_sprite.o \
	r_surf.o \
	r_vars.o \
	screen.o \
	vid_sdl.o \
	d_draw.o \
	d_draw16.o \
	d_draw16t.o \
	d_parta.o \
	d_polysa.o \
	d_polysa2.o \
	d_polysa3.o \
	d_polysa4.o \
	d_polysa5.o \
	d_scana.o \
	d_spr8.o \
	d_spr8t.o \
	d_spr8t2.o \
	d_varsa.o \
	r_aclipa.o \
	r_aliasa.o \
	r_drawa.o \
	r_edgea.o \
	r_edgeb.o \
	r_varsa.o \
	surf16.o \
	surf8.o

GLOBJS = gl_dl_draw.o \
	gl_mesh.o \
	gl_model.o \
	gl_refrag.o \
	gl_dl_rlight.o \
	gl_dl_rmain.o \
	gl_dl_rmisc.o \
	gl_dl_rsurf.o \
	gl_dl_screen.o \
	gl_dl_test.o \
	gl_dl_warp.o \
	gl_dl_vidsdl.o

COMMONOBJS = cd_unix.o \
	chase.o \
	cl_demo.o \
	cl_effect.o \
	cl_input.o \
	cl_main.o \
	cl_parse.o \
	cl_tent.o \
	cmd.o \
	common.o \
	console.o \
	crc.o \
	cvar.o \
	host.o \
	host_cmd.o \
	in_sdl.o \
	keys.o \
	mathlib.o \
	menu.o \
	midi_sdl.o \
	net_bsd.o \
	net_dgrm.o \
	net_loop.o \
	net_main.o \
	net_udp.o \
	net_vcr.o \
	pr_cmds.o \
	pr_edict.o \
	pr_exec.o \
	r_dl_part.o \
	sbar.o \
	snd_dma.o \
	snd_mix.o \
	snd_mem.o \
	snd_oss.o \
	snd_sdl.o \
	snd_alsa.o \
	sv_main.o \
	sv_move.o \
	sv_phys.o \
	sv_user.o \
	sys_unix.o \
	view.o \
	wad.o \
	world.o \
	zone.o \
	math.o \
	snd_mixa.o \
	sys_wina.o \
	worlda.o


clean:
	rm -f *.o core

cleaner:
	rm -f *.o core $(GLMP_BINARY) $(GLMP_BINARY_STATIC) $(GLH2_BINARY) $(GLH2_BINARY_STATIC)\
	$(MP_BINARY) $(MP_BINARY_STATIC) $(H2_BINARY) $(H2_BINARY_STATIC)

glmp_static : GAMEFLAGS+= -DGLQUAKE -DH2MP
glmp_static : $(GLOBJS) $(COMMONOBJS)
		$(LINKER) -o $(GLMP_BINARY_STATIC) $(GLOBJS) $(COMMONOBJS) $(LDSTATIC)

glmp_dynamic : GAMEFLAGS+=-DGLQUAKE -DH2MP
glmp_dynamic : $(GLOBJS) $(COMMONOBJS)
		$(LINKER) -o $(GLMP_BINARY) $(GLOBJS) $(COMMONOBJS) $(LDFLAGS) $(GLFLAGS) $(SDLLINK)

glh2_static : GAMEFLAGS+=-DGLQUAKE
glh2_static : $(GLOBJS) $(COMMONOBJS)
		$(LINKER) -o $(GLH2_BINARY_STATIC) $(GLOBJS) $(COMMONOBJS) $(LDSTATIC)

glh2_dynamic : GAMEFLAGS+=-DGLQUAKE
glh2_dynamic : $(GLOBJS) $(COMMONOBJS)
		$(LINKER) -o $(GLH2_BINARY) $(GLOBJS) $(COMMONOBJS) $(LDFLAGS) $(GLFLAGS) $(SDLLINK)

mp_static : GAMEFLAGS+=-DH2MP
mp_static : $(SOFTOBJS) $(COMMONOBJS)
		$(LINKER) -o $(MP_BINARY_STATIC) $(SOFTOBJS) $(COMMONOBJS) $(LDSTATIC)

mp_dynamic : GAMEFLAGS+=-DH2MP
mp_dynamic : $(SOFTOBJS) $(COMMONOBJS)
		$(LINKER) -o $(MP_BINARY) $(SOFTOBJS) $(COMMONOBJS) $(LDFLAGS) $(SDLLINK)

h2_static : $(SOFTOBJS) $(COMMONOBJS)
		$(LINKER) -o $(H2_BINARY_STATIC) $(SOFTOBJS) $(COMMONOBJS) $(LDSTATIC)

h2_dynamic : $(SOFTOBJS) $(COMMONOBJS)
		$(LINKER) -o $(H2_BINARY) $(SOFTOBJS) $(COMMONOBJS) $(LDFLAGS) $(SDLLINK)

