
#  if building for the demo version, run with
#  make DEMO=yes [other stuff]

#H2_BINARY=hexen2.exe
#GLH2_BINARY=glhexen2.exe
H2_BINARY=h2.exe
GLH2_BINARY=glh2.exe
MP_BINARY=h2mp.exe
GLMP_BINARY=glh2mp.exe

MINGWDIR=/mingw

AS = nasmw
CC = gcc
LINKER = $(CC)

ifdef DEBUG
CFLAGS = -DDEBUG_BUILD -g -Wall
else
CFLAGS = -O2 -march=i586 -Wall \
	-fomit-frame-pointer -ffast-math -fexpensive-optimizations \
	-falign-loops=2 -falign-jumps=2 -falign-functions=2

endif
CFLAGS+= -I. -I../w32stuff/dxsdk/inc -I$(MINGWDIR)/include

LDFLAGS = -L$(MINGWDIR)/lib -lwinmm -lwsock32 -mwindows

# whether to dlsym gl and wgl function calls
WGL_DLSYM=yes
ifeq "$(WGL_DLSYM)" "yes"
GL_DEFS = -DGL_DLSYM
GLFLAGS = 
else
GL_DEFS = 
GLFLAGS = -lopengl32
endif

ASFLAGS = -fwin32 -D__WIN32__ --prefix _

GAMEFLAGS =

ifdef DEMO
GAMEFLAGS+= -DDEMOBUILD
endif

ICO_FILE = hexen2.ico

# disable startup splash screens
GAMEFLAGS+= -DNO_SPLASHES

# Rules for turning source files into .o files
%.o: %.c
	$(CC) -c $(CFLAGS) $(GAMEFLAGS) -o $@ $<
%.o: %.asm
	$(AS) $(ASFLAGS) -o $@ $<
win32res.o: win_stuff/hexen2.rc
	cp icons/$(ICO_FILE) resource.ico
	windres --include=$(MINGWDIR)/include --output=coff -o $@ $<
	rm -f resource.ico

SOFTOBJS = d_edge.o \
	d_fill.o \
	d_init.o \
	d_modech.o \
	d_part.o \
	d_polyse.o \
	d_scan.o \
	d_sky.o \
	d_sprite.o \
	d_surf.o \
	d_vars.o \
	d_zpoint.o \
	draw.o \
	model.o \
	r_aclip.o \
	r_alias.o \
	r_bsp.o \
	r_draw.o \
	r_edge.o \
	r_efrag.o \
	r_light.o \
	r_main.o \
	r_misc.o \
	r_sky.o \
	r_sprite.o \
	r_surf.o \
	r_vars.o \
	screen.o \
	win_stuff/vid_win.o \
	d_draw.o \
	d_draw16.o \
	d_draw16t.o \
	d_parta.o \
	d_polysa.o \
	d_polysa2.o \
	d_polysa3.o \
	d_polysa4.o \
	d_polysa5.o \
	d_scana.o \
	d_spr8.o \
	d_spr8t.o \
	d_spr8t2.o \
	d_varsa.o \
	r_aclipa.o \
	r_aliasa.o \
	r_drawa.o \
	r_edgea.o \
	r_edgeb.o \
	r_varsa.o \
	surf16.o \
	surf8.o

GLOBJS = gl_dl_draw.o \
	gl_mesh.o \
	gl_model.o \
	gl_refrag.o \
	gl_dl_rlight.o \
	gl_dl_rmain.o \
	gl_dl_rmisc.o \
	gl_dl_rsurf.o \
	gl_dl_screen.o \
	gl_dl_test.o \
	gl_dl_warp.o \
	win_stuff/gl_vidnt.o

COMMONOBJS = win_stuff/cd_win.o \
	win_stuff/conproc.o \
	chase.o \
	cl_demo.o \
	cl_effect.o \
	cl_input.o \
	cl_main.o \
	cl_parse.o \
	cl_tent.o \
	cmd.o \
	common.o \
	console.o \
	crc.o \
	cvar.o \
	host.o \
	host_cmd.o \
	win_stuff/in_win.o \
	keys.o \
	mathlib.o \
	menu.o \
	win_stuff/midi.o \
	win_stuff/mstrconv.o \
	win_stuff/net_win.o \
	win_stuff/net_wins.o \
	win_stuff/net_wipx.o \
	net_dgrm.o \
	net_loop.o \
	net_main.o \
	net_vcr.o \
	pr_cmds.o \
	pr_edict.o \
	pr_exec.o \
	r_dl_part.o \
	sbar.o \
	snd_dma.o \
	snd_mix.o \
	snd_mem.o \
	win_stuff/snd_win.o \
	sv_main.o \
	sv_move.o \
	sv_phys.o \
	sv_user.o \
	win_stuff/sys_win.o \
	view.o \
	wad.o \
	world.o \
	zone.o \
	math.o \
	snd_mixa.o \
	sys_wina.o \
	worlda.o \
	win32res.o


clean:
	rm -f $(SOFTOBJS) $(GLOBJS) $(COMMONOBJS) core

cleaner:
	rm -f $(SOFTOBJS) $(GLOBJS) $(COMMONOBJS) $(GLMP_BINARY) $(GLH2_BINARY) $(MP_BINARY) $(H2_BINARY) core

glmp_exe : CFLAGS+= $(GL_DEFS)
glmp_exe : GAMEFLAGS+=-DGLQUAKE -DH2MP
glmp_exe : ICO_FILE=h2mp.ico
glmp_exe : $(GLOBJS) $(COMMONOBJS)
		$(LINKER) -o $(GLMP_BINARY) $(GLOBJS) $(COMMONOBJS) $(LDFLAGS) $(GLFLAGS)

glh2_exe : CFLAGS+= $(GL_DEFS)
glh2_exe : GAMEFLAGS+=-DGLQUAKE
glh2_exe : $(GLOBJS) $(COMMONOBJS)
		$(LINKER) -o $(GLH2_BINARY) $(GLOBJS) $(COMMONOBJS) $(LDFLAGS) $(GLFLAGS)

mp_exe : CFLAGS+=-DMGL_DLL -I../w32stuff/scitech
mp_exe : LDFLAGS+=-L../w32stuff/scitech -lmglfxi
mp_exe : GAMEFLAGS+=-DH2MP
mp_exe : ICO_FILE=h2mp.ico
mp_exe : $(SOFTOBJS) $(COMMONOBJS)
		$(LINKER) -o $(MP_BINARY) $(SOFTOBJS) $(COMMONOBJS) $(LDFLAGS)

h2_exe : CFLAGS+=-DMGL_DLL -I../w32stuff/scitech
h2_exe : LDFLAGS+=-L../w32stuff/scitech -lmglfxi
h2_exe : $(SOFTOBJS) $(COMMONOBJS)
		$(LINKER) -o $(H2_BINARY) $(SOFTOBJS) $(COMMONOBJS) $(LDFLAGS)
