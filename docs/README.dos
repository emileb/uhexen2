Hexen II for DOS, version 1.5.2

DOS port of Hexen II, using the Hammer of Thyrion (uHexen2) engine
http://uhexen2.sourceforge.net/
http://sourceforge.net/projects/uhexen2/

  h2dos.exe:	Hexen II main game program.
  h2patch.exe:	Patch program to upgrade Hexen II game pak files to the
		latest 1.11 version of Raven Software.
  h2ded.exe:	Hexen II dedicated server application.


Things that don't work:

* MIDI music:  Not implemented yet.
* Loading progress bars:  Not implemented yet.

Things that just work:

* All other functionality in uhexen2 just works under DOS, including
  Ogg/Vorbis and MP3 music playback.

Things not tested, but should work:

* NETWORKING:  Neither of BWTCP, modem or direct connection is tested.
  The code is almost exactly the same as the quake dos network code,
  therefore they should work the same way they do with dos-quake.  On
  the other hand, IPX has been reported to work fine.

  In addition, uHexen2 includes WatTCP (WATT-32) support for internet
  play, which has been reported to work without issues.  See WatTCP
  documentation (http://home.broadpark.no/~gvanem/) to setup WatTCP.
  Note: WatTCP won't initialize if IPX is running.
  Note: WatTCP was observed not to work with H2DOS as a server, nor
  with H2DED. HexenWorld client or server with WatTCP doesn't work for
  now, either.

  Note: The Hexen II dedicated server application H2DED is not tested.

  In case you want to disable some or all network functionality, here
  are the related command line switches:
  -noupd : disables UDP (TCP/IP)
  -noipx : disables IPX
  -noserial: disables serial networking (modem / direct connection)
  -nolan : disables all networking.

* JOYSTICK:  The code is the same as quake joystick code, therefore
  it should work the same way it does with dos-quake. Note: In order
  to disable joystick, use the command line argument -nojoy.


NOTES:

* THE GAME DATA:  Copy the two files named pak0.pak and pak1.pak from
  your original cdrom into the data1 directory.  If you have the
  mission pack, copy the file named pak3.pak from the cdrom into the
  portals directory.  Alternatively, you can copy over the pak files
  them from an existing windows intallation.  In any case, the pak
  files must be patched to the Raven's latest 1.11 version:  Just run
  the included H2PATCH program and it will be done.

* MEMORY:  The default amount of required memory is 32 MB.  You need
  at least 16 MB.  If you want to specify the amount of memory to use,
  run the game like this:

	h2dos -mem 16

  Note: Higher video resolutions will be disabled in case of insuffi-
  cient memory.

* CWSDPMI: Packaged with h2dos is CWSDPMI r7, which is the latest as
  of this writing. If you ever have problems with it, try switching
  to CWSDPMI r5/2008 refresh (see under the DPMI subdirectory in the
  hexen2dos package.)

* MOUSE: The driver that came with your mouse must be running.  In
  order to disable mouse, use the command line argument -nomouse.
  "CuteMouse" is recommended as a DOS mouse driver. CuteMouse official
  homepage is at  http://cutemouse.sourceforge.net/ , you can also
  check here:
  http://www.ibiblio.org/pub/micro/pc-stuff/freedos/files/dos/mouse/

* MOUSE WHEEL:  If you use the latest beta version of cutemouse, which
  is 2.1b3 (ctmouse21b3.zip), the wheel should work nicely. We tested
  with the 2.0-alpha and 2.1-beta versions.  Since this is technically
  an experimental feature, you must run the game using the "-mwheel"
  command line argument, such as:

	h2dos -mwheel

  Note: Since cutemouse 2.1 beta 4 version (cutemouse21b4.zip), the
  wheel is not enabled by default: you must use their /O switch.

* SOUND:  You must install the DOS drivers for your sound card.  For
  sound blaster emulation, the BLASTER environment variable must be set.
  In order to disable sound, use the command line argument -nosound.

* CDAUDIO:  The cdrom driver (cdrom.sys, xcdrom.sys, etc.) must be
  loaded and mscdex 2.0 or compatible (such as shsucdx) must be running.
  If you have more than one cdrom drives, use the -cddev command line
  switch with a single drive letter as the argument, like:

	h2dos -cddev e

  Without the -cddev switch, the game will access the first cdrom drive.
  In order to disable cdaudio, use the command line argument -nocdaudio.

* DEBUG LOG:  If something goes wrong, or if you are just curious, run
  the game using the command line argument -devlog, like:

	h2dos -devlog <other things..>

  With this switch, all and every messages from the game engine will be
  written into the file named debug_h2.log. It may contain clues about
  any problems you may have encountered.

