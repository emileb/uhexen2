;; -*- Emacs-Lisp -*-

(defmodule edsio 6 "edsio.h" nil)

(defsertype EdsioUint 1
  ((val uint))
  ()
  )

(defsertype EdsioBytes 2
  ((val bytes))
  ()
  )

(defsertype EdsioString 3
  ((val string))
  ()
  )

(defsertype GenericTime 4
  ((seconds uint)
   (nanos   uint)
   )
  ()
  )

(defetype source "SerialSource*")
(defetype sink   "SerialSink*")
(defetype int     "int")
(defetype string  "const char*")

(defevent GetTimeOfDayFailure      Error () (errno)
  "Gettimeofday failed: ${STRERROR}")

(defevent TimeFailure      Error () (errno)
  "Time failed: ${STRERROR}")

(defevent UnregisteredType Error ((library int) (number int)) ()
  "Unregistered serial type: library=${LIBRARY} number=${NUMBER}")

(defevent UnexpectedLibraryType Error ((expected int) (received int)) ()
  "Unexpected serial library type: expected ${EXPECTED}, received ${RECEIVED}")

(defevent UnexpectedType Error () ()
  "Unexpected serial type")

(defevent OutputBufferShort Error () ()
  "Output buffer is too short")

(defevent InvalidBase64Encoding Error () ()
  "Invalid base64 encoding")

(defevent MissingChecksum Error () ()
  "Missing embedded checksum in base64 encoding")

(defevent InvalidChecksum Error () ()
  "Checksum verification failed")

(defevent SourceEof Error ((source source)) ()
  "${SOURCE}: Unexpected EOF")

(defevent IncorrectAllocation Error ((source source)) ()
  "${SOURCE}: Incorrect allocation")

(defevent InvalidIntegerString Error ((msg string) (arg string)) ()
  "${MSG}: not an integer: ${ARG}")

(defevent IntegerOutOfRange Error ((msg string) (arg string)) ()
  "${MSG}: integer out of range: ${ARG}")

(defevent InvalidIntegerSign Error ((msg string) (arg string)) ()
  "${MSG}: expected an unsigned integer: ${ARG}")

(defevent DuplicatePropertyTypeRegistered Error ((name string)) ()
  "Property type registered twice: ${NAME}")

(defevent DuplicateHostTypeRegistered Error ((name string)) ()
  "Property host registered twice: ${NAME}")

(defevent DuplicatePropertyNameRegistered Warning ((name string)) ()
  "Property name registered twice (ignored): ${NAME}")

(defevent NoSuchProperty Error ((num int)) ()
  "Unregistered property: ${NUM}")

(defevent NoSuchPropertyType Error ((name string)) ()
  "Unregistered property type: ${NAME}")

(defevent NoSuchHostType Error ((name string)) ()
  "Unregistered host type: ${NAME}")

(defevent WrongHostType Error ((name string) (recv string) (expect string)) ()
  "Wrong property host type: received ${RECV}, expected ${EXPECT}")

(defevent WrongDataType Error ((name string) (recv string) (expect string)) ()
  "Wrong property data type: received ${RECV}, expected ${EXPECT}")

(defevent PropertyNotSet Error ((name string)) ()
  "${NAME} property not set")

(defevent PersistenceUnavailable Error ((name string) (host string)) ()
  "Persistence is unavailable in host ${HOST} for property ${NAME}")

(defevent InvalidStreamChecksum Error () ()
  "Incorrect stream checksum")

(defevent InvalidHexDigit Error ((bad string) (ctx string)) ()
  "Invalid hex digit ${BAD} in context: ${CTX}")

(defevent MD5StringShort Error ((short string)) ()
  "MD5 string too short: ${SHORT}")

(defevent MD5StringLong Error ((long string)) ()
  "MD5 string too long: ${LONG}")

(defevent UnregisteredLibrary Error ((number int)) ()
  "Unregistered library: ${NUMBER}")

(defevent GModuleError Error ((file string) (msg string)) ()
  "GModule: ${FILE}: ${MSG}")

;; properties

(defprophost PropTest "P" "PropTest*" t)

(defprophosttype PropTest uint)
(defprophosttype PropTest bytes)
(defprophosttype PropTest string)
(defprophosttype PropTest EdsioUint)
